#!/usr/bin/env bash

DIR="$( cd "$( dirname "$0" )" && pwd )"
CLI=$(echo $(basename "$0"))

function _am(){
	AMCLI="am"
	AMCLIPATH=$AMCLI
	SUDOCOMMAND="sudo"
	COMPLETIONPATH="/etc/bash_completion.d"
	COMPLETIONFILE="am-completion.sh"
	APPSPATH="/opt"
	AMPATH="$APPSPATH/$AMCLI"
	mkdir -p $AMPATH/.cache
	mkdir -p $AMPATH/modules
}

function _appman() {
	# Helper functions defined inside the parent function
	function prompt_for_directory() {
		local location
		read -r -ep "Please, write the name or the path of your custom application's folder: $(echo -e '\n\n '$HOME'/')" location
		echo "$location"
	}

	function validate_directory() {
		local location=$1
		if [[ "$location" == "" ]]; then
			echo -e "--------------------------------------------------------------------------"
			echo "OPERATION ABORTED!"
			exit  1
		elif [[ "$location" == ".local/bin" ]]; then
			echo -e "--------------------------------------------------------------------------\n"
			echo -e " ðŸ’€ ERROR, you can't install applications into a '$PATH'\n\n The directory ~/.local/bin and 'bin' folders are used for executables.\n\n Please, choose a different path and retry! \n"
			echo -e "--------------------------------------------------------------------------\n"
			exit  1
			else
			local location_appman="${location/#$HOME}"
			location_appman="${location_appman// /-}"
			location_appman="${location_appman#/}"
			location_appman="${location_appman%/}"
			echo "$location_appman"
		fi
	}

	function initialize_appman() {
		APPSDIR=$1
		mkdir -p ~/$APPSDIR/appman/.cache
		mkdir -p ~/$APPSDIR/appman/modules
		mkdir -p ~/.local/bin ~/.local/share/applications ~/.local/share/icons
		AMCLI="appman"
		AMCLIPATH="$DIR/$AMCLI"
		SUDOCOMMAND=""
		COMPLETIONPATH="$HOME"
		COMPLETIONFILE=".bash_completion"
		APPSPATH="$HOME/$APPSDIR"
		AMPATH="$HOME/$APPSDIR/$AMCLI"
	}

	# Main execution
	if [[ ! -f ~/.config/appman/appman-config ]]; then
		echo "--------------------------------------------------------------------------"
		echo " >>> Thank you for choosing AppMan!"
		echo "--------------------------------------------------------------------------"
		echo "Before proceeding with any task, write the name of the directory in which"
		echo 'you will install the apps, for example "Programs" or "My-apps", you can '
		echo 'also choose a subfolder, for example ".local/My-apps" or a deeper path.'
		echo -e "\nThe destination folder will be created in $HOME"
		echo -e "\nSYNTAX: PATH/TO/DIRNAME\n"
		echo 'NOTE, any spaces or "/" at the beginning and end will be removed. If you '
		echo 'decide to change your choice in the future, first remove all the programs'
		echo 'and then edit the ~/.config/appman/appman-config text file.'
		echo -e "--------------------------------------------------------------------------\n"

		local location=$(prompt_for_directory)
		local validated_location=$(validate_directory "$location")
		mkdir -p ~/.config/appman
		echo "$validated_location" >> ~/.config/appman/appman-config
		echo '--------------------------------------------------------------------------'
		echo 'You are ready! Start installing your favorite apps locally!!'
		echo "All apps will be installed in $HOME/$validated_location"
		echo -e '\nIn case of problems, use the option "-h".'
		echo '--------------------------------------------------------------------------'
	fi
	initialize_appman $(<~/.config/appman/appman-config)
}

if [[ "$DIR/$CLI" == "/usr/local/bin/am" ]] 2>/dev/null; then
	_am
else
	_appman
fi

function _online_check(){
	if ! wget -q --tries=10 --timeout=20 --spider https://github.com; then
		echo -e "\n $AMCLI is offline, please check your internet connection and try again\n"
		exit
	fi
}

if [[ -f $AMPATH/new-repo.txt ]]; then
	AMREPO=$(<"$AMPATH/new-repo.txt") # Utilizing command substitution with < for more efficient file reading
	if [[ "$@" != "newrepo off" ]]; then
		echo -e "\n WARNING, custom repository ENABLED!\n Use the command '$AMCLI newrepo off' to restore the default repo!\n"
	fi
else
	AMREPO="https://raw.githubusercontent.com/IVAN-HC/AM/main" # Consolidating variable assignments for clarity and brevity
fi

# Determine system architecture and current user
arch="$HOSTTYPE"
currentuser="$USER"

# Check for essential commands required by the application
missing_deps=()
for name in cat chmod chown curl grep sed wget; do
  if ! command -v "$name" &>/dev/null; then
	printf "\nERROR: command \"%s\" not found, strongly needed by \"%s\"!\n" "$name" "$AMCLI"
	missing_deps+=("$name")
  fi
done

# Exit if any essential command is missing
if [ ! -z "$missing_deps" ]; then
  printf "\nMissing essential commands: %s\nInstall the above and try again\n\n" "${missing_deps[*]}"
  exit 1
fi

rm -rf "$AMPATH/options"
cat <<-HEREDOC >> "$AMPATH/options"
	about
	apikey
	backup
	clean
	download
	files
	install
	list
	lock
	newrepo
	overwrite
	query
	remove
	sync
	template
	test
	unlock
	update
	web
	--convert
	--debug
	--disable-completion
	--enable-completion
	--firejail
	--force-latest
	--home
	--launcher
	--libs
	--rollback
	--sandbox
	--user
HEREDOC

function _no_sudo(){
	if [ -n "$SUDO_COMMAND" ]; then 
		printf "\n WARNING: You don't need to use SUDO for this.\n\n"; 
		exit 1; 
	fi
}

function _patch_bashrc_and_profile(){
	# Check if the custom PATH is not already in .bashrc, then append it (fix - exclamation mark negates the entire command substitution)
	if ! grep -q 'export PATH=$PATH:$(xdg-user-dir USER)/.local/bin' "$HOME/.bashrc"; then
		echo 'export PATH=$(echo $PATH | tr ":" "\n" | grep -v "/.local/bin" | tr "\n" ":" | sed ''s/.$//'')' >> "$HOME/.bashrc"
		echo -e 'export PATH=$PATH:$(xdg-user-dir USER)/.local/bin\n' >> "$HOME/.bashrc"
	fi
	# Correct the order of .local/bin in .profile if necessary
	if grep -q 'PATH="$HOME/.local/bin:$PATH"' "$HOME/.profile"; then
		sed -i 's#PATH="$HOME/.local/bin:$PATH"#PATH="$PATH:$HOME/.local/bin"#g' "$HOME/.profile"
	fi
}

# Check if the script is called with 'appman' and if so, perform initial setup
[ "$AMCLI" = "appman" ] && {
	_no_sudo
	_patch_bashrc_and_profile
}

# Set header authorization if GitHub API key file exists
[ -f "$AMPATH/ghapikey.txt" ] && HeaderAuthWithGITPAT=" --header \"Authorization: token $(<"$AMPATH/ghapikey.txt")\" "

# Export all variables above to the modules
export AMCLI=$AMCLI
export AMCLIPATH=$AMCLIPATH
export AMPATH=$AMPATH
export AMREPO=$AMREPO
export APPSPATH=$APPSPATH
export COMPLETIONFILE=$COMPLETIONFILE
export COMPLETIONPATH=$COMPLETIONPATH
export SUDOCOMMAND=$SUDOCOMMAND
export arch=$arch
export currentuser=$currentuser

case "$1" in

  '') printf "\n USAGE: '$AMCLI [option]'\n        '$AMCLI [option] [argument]'\n\n Run the '$AMCLI -h' command to find out more\n\n";;

  '-h'|'help')

	if ! test -f $AMPATH/modules/help.am; then
		wget -q $AMREPO/modules/help.am -O $AMPATH/modules/help.am
		chmod a+x $AMPATH/modules/help.am
	fi

	$AMPATH/modules/help.am
  	;;

  '-a'|'about')

	_no_sudo
	_online_check

	[[ -f $AMPATH/modules/about.am ]] || {
		wget -q $AMREPO/modules/about.am -O $AMPATH/modules/about.am
		chmod a+x $AMPATH/modules/about.am
	}

	source $AMPATH/modules/about.am "$@"
	;;

  '-b'|'backup')

	_no_sudo

	if ! test -f $AMPATH/modules/backup.am; then
		wget -q $AMREPO/modules/backup.am -O $AMPATH/modules/backup.am
		chmod a+x $AMPATH/modules/backup.am
	fi

	$AMPATH/modules/backup.am "$@"
	;;

  '-c'|'clean')

  	_no_sudo

	if ! test -f $AMPATH/modules/clean.am; then
		wget -q $AMREPO/modules/clean.am -O $AMPATH/modules/clean.am
		chmod a+x $AMPATH/modules/clean.am
	fi

	$AMPATH/modules/clean.am
	;;

  '-d'|'download')

	_no_sudo
	_online_check

	if ! test -f $AMPATH/modules/download.am; then
		wget -q $AMREPO/modules/download.am -O $AMPATH/modules/download.am
		chmod a+x $AMPATH/modules/download.am
	fi

	$AMPATH/modules/download.am "$@"
	;;

  '-f'|'files')

  	_no_sudo

	if ! test -f $AMPATH/modules/files.am; then
		wget -q $AMREPO/modules/files.am -O $AMPATH/modules/files.am
		chmod a+x $AMPATH/modules/files.am
	fi

	$AMPATH/modules/files.am
	;;

  '-H'|'--home')

	_no_sudo

	if ! test -f $AMPATH/modules/home.am; then
		wget -q $AMREPO/modules/home.am -O $AMPATH/modules/home.am
		chmod a+x $AMPATH/modules/home.am
	fi

	$AMPATH/modules/home.am "$@"
	;;

  '-i'|'install')

	_online_check

	if ! test -f $AMPATH/modules/install.am; then
		wget -q $AMREPO/modules/install.am -O $AMPATH/modules/install.am
		chmod a+x $AMPATH/modules/install.am
	fi

	$AMPATH/modules/install.am "$@"
	;;

  '-l'|'list')

  	_no_sudo

	if ! test -f $AMPATH/modules/list.am; then
		wget -q $AMREPO/modules/list.am -O $AMPATH/modules/list.am
		chmod a+x $AMPATH/modules/list.am
	fi

	$AMPATH/modules/list.am "$@"
	;;

  '-o'|'overwrite')

	_no_sudo

	if ! test -f $AMPATH/modules/overwrite.am; then
		wget -q $AMREPO/modules/overwrite.am -O $AMPATH/modules/overwrite.am
		chmod a+x $AMPATH/modules/overwrite.am
	fi

	$AMPATH/modules/overwrite.am "$@"
	;;

  '-q'|'query')

	_no_sudo

	if ! test -f $AMPATH/modules/query.am; then
		wget -q $AMREPO/modules/query.am -O $AMPATH/modules/query.am
		chmod a+x $AMPATH/modules/query.am
	fi

	$AMPATH/modules/query.am "$@"
	;;

  '-r'|'remove')

	if ! test -f $AMPATH/modules/remove.am; then
		wget -q $AMREPO/modules/remove.am -O $AMPATH/modules/remove.am
		chmod a+x $AMPATH/modules/remove.am
	fi

	$AMPATH/modules/remove.am "$@"
	;;

  '-R')

	if ! test -f $AMPATH/modules/R.am; then
		wget -q $AMREPO/modules/R.am -O $AMPATH/modules/R.am
		chmod a+x $AMPATH/modules/R.am
	fi

	$AMPATH/modules/R.am "$@"
	;;

  '-s'|'sync')

	_no_sudo
	_online_check

	if ! test -f $AMPATH/modules/sync.am; then
		wget -q $AMREPO/modules/sync.am -O $AMPATH/modules/sync.am
		chmod a+x $AMPATH/modules/sync.am
	fi

	$AMPATH/modules/sync.am "$@"
	;;

  '-t'|'template')

	_no_sudo
	_online_check

	if ! test -f $AMPATH/modules/template.am; then
		wget -q $AMREPO/modules/template.am -O $AMPATH/modules/template.am
		chmod a+x $AMPATH/modules/template.am
	fi

	$AMPATH/modules/template.am "$@"
	;;

  '-u'|'-U'|'update') 

	_no_sudo
	_online_check

	if ! test -f $AMPATH/modules/update.am; then
		wget -q $AMREPO/modules/update.am -O $AMPATH/modules/update.am
		chmod a+x $AMPATH/modules/update.am
	fi

	$AMPATH/modules/update.am "$@"
	;;

  '-w'|'web')

	_no_sudo
	_online_check

	if ! test -f $AMPATH/modules/web.am; then
		wget -q $AMREPO/modules/web.am -O $AMPATH/modules/web.am
		chmod a+x $AMPATH/modules/web.am
	fi

	$AMPATH/modules/web.am "$@"
	;;

  '--disable-completion'|'--enable-completion')

	if ! test -f $AMPATH/modules/completion.am; then
		wget -q $AMREPO/modules/completion.am -O $AMPATH/modules/completion.am
		chmod a+x $AMPATH/modules/completion.am
	fi

	$AMPATH/modules/completion.am "$@"
	;;

  '--firejail'|'--sandbox')

	_no_sudo

	if ! test -f $AMPATH/modules/firejail.am; then
		wget -q $AMREPO/modules/firejail.am -O $AMPATH/modules/firejail.am
		chmod a+x $AMPATH/modules/firejail.am
	fi

	$AMPATH/modules/firejail.am "$@"
	;;

  '--force-latest')

	_no_sudo

	if ! test -f $AMPATH/modules/force-latest.am; then
		wget -q $AMREPO/modules/force-latest.am -O $AMPATH/modules/force-latest.am
		chmod a+x $AMPATH/modules/force-latest.am
	fi

	$AMPATH/modules/force-latest.am "$@"
	;;

  '--launcher')

	_no_sudo

	if ! test -f $AMPATH/modules/launcher.am; then
		wget -q $AMREPO/modules/launcher.am -O $AMPATH/modules/launcher.am
		chmod a+x $AMPATH/modules/launcher.am
	fi

	$AMPATH/modules/launcher.am "$@"
	;;

  '--rollback')

	_no_sudo
	_online_check

	if ! test -f $AMPATH/modules/rollback.am; then
		wget -q $AMREPO/modules/rollback.am -O $AMPATH/modules/rollback.am
		chmod a+x $AMPATH/modules/rollback.am
	fi

	$AMPATH/modules/rollback.am "$@"
	;;

  '--user'|'appman')

  	_no_sudo
  	_online_check

	if ! test -f $AMPATH/modules/user.am; then
		wget -q $AMREPO/modules/user.am -O $AMPATH/modules/user.am
		chmod a+x $AMPATH/modules/user.am
	fi

	$AMPATH/modules/user.am
  	;;

  'apikey')

	_no_sudo
	_online_check

	if ! test -f $AMPATH/modules/apikey.am; then
		wget -q $AMREPO/modules/apikey.am -O $AMPATH/modules/apikey.am
		chmod a+x $AMPATH/modules/apikey.am
	fi

	$AMPATH/modules/apikey.am "$@"
	;;

  'lock')

	_no_sudo

	if ! test -f $AMPATH/modules/lock.am; then
		wget -q $AMREPO/modules/lock.am -O $AMPATH/modules/lock.am
		chmod a+x $AMPATH/modules/lock.am
	fi

	$AMPATH/modules/lock.am "$@"
	;;

  'newrepo')

	_no_sudo
	_online_check

	if ! test -f $AMPATH/modules/newrepo.am; then
		wget -q $AMREPO/modules/newrepo.am -O $AMPATH/modules/newrepo.am
		chmod a+x $AMPATH/modules/newrepo.am
	fi

	$AMPATH/modules/newrepo.am "$@"
	;;

  'unlock')

	_no_sudo

	if ! test -f $AMPATH/modules/unlock.am; then
		wget -q $AMREPO/modules/unlock.am -O $AMPATH/modules/unlock.am
		chmod a+x $AMPATH/modules/unlock.am
	fi

	$AMPATH/modules/unlock.am "$@"
	;;

  'version'|'-v'|'--version')

  	echo "6-2";;

  *) exec $AMCLIPATH ;;

esac
