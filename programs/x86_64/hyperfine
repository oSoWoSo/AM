#!/bin/sh

APP=hyperfine
SITE="sharkdp/hyperfine"

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /opt/$APP /usr/local/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE ARCHIVE
mkdir tmp
cd ./tmp

version=$(wget -q https://api.github.com/repos/sharkdp/hyperfine/releases -O - | grep browser_download_url | grep -i x86_64-unknown-linux-gnu.tar.gz   | cut -d '"' -f 4 | head -1)
wget $version
echo "$version" >> /opt/$APP/version
tar fx ./*tar*; rm -R -f ./*tar*
cd ..
mv --backup=t ./tmp/*/$APP ./
rm -R -f ./tmp

# LINK
ln -s /opt/$APP/$APP /usr/local/bin/$APP; ln -s /opt/$APP/$APP /usr/local/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM
cat >> /opt/$APP/AM-updater << 'EOF'
#!/usr/bin/env bash
APP=hyperfine
version0=$(cat /opt/$APP/version)
version=$(wget -q https://api.github.com/repos/sharkdp/hyperfine/releases -O - | grep browser_download_url | grep -i x86_64-unknown-linux-gnu.tar.gz  | cut -d '"' -f 4 | head -1)
if [ $version = $version0 ]; then
	echo "Update not needed!"
else
	notify-send "A new version of $APP is available, please wait"
	mkdir /opt/$APP/tmp
	cd /opt/$APP/tmp
	wget $version
  tar fx ./*tar*; rm -R -f ./*tar*
	cd ..
  mv --backup=t ./tmp/*/$APP ./
	rm ./version
	echo $version >> ./version
	rm -R -f ./tmp ./*~
	notify-send "$APP is updated!"
fi
EOF
chmod a+x /opt/$APP/AM-updater

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP
