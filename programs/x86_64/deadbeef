#!/bin/sh

APP=deadbeef
SITE="https://deadbeef.sourceforge.io"

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /usr/share/applications/AM-$APP.desktop /opt/$APP /usr/local/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE ARCHIVE
mkdir tmp
cd ./tmp

version=$(wget -q https://deadbeef.sourceforge.io/download.html -O - | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" | sort -u | grep "tar.bz" | grep static)
wget $version -O download.tar.bz2
echo "$version" >> /opt/$APP/version
tar fx ./*tar*; rm -f -R ./*tar*
cd ..
mv --backup=t ./tmp/*/* ./
rm -R -f ./tmp

# LINK
echo -e '#!/usr/bin/sh\n\nAPP='$APP'\n/opt/$APP/$APP "$@" ' >> /usr/local/bin/$APP; chmod a+x /usr/local/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM
cat >> /opt/$APP/AM-updater << 'EOF'
#!/usr/bin/env bash
APP=deadbeef
version0=$(cat /opt/$APP/version)
version=$(wget -q https://deadbeef.sourceforge.io/download.html -O - | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" | sort -u | grep "tar.bz" | grep static)
if [ $version = $version0 ]; then
	echo "Update not needed!"
else
	notify-send "A new version of $APP is available, please wait"
	mkdir /opt/$APP/tmp
	cd /opt/$APP/tmp
	wget $version -O download.tar.bz2
  tar fx ./*tar*; rm -f -R ./*tar*
	cd ..
  mv --backup=t ./tmp/*/* ./
	rm ./version
	echo $version >> ./version
	rm -R -f ./tmp ./*~
	notify-send "$APP is updated!"
fi
EOF
chmod a+x /opt/$APP/AM-updater

# ICON
mkdir icons
wget https://deadbeef.sourceforge.io/deadbeef.png -O ./icons/$APP 2> /dev/null

# LAUNCHER
rm -f /usr/share/applications/AM-$APP.desktop
echo "[Desktop Entry]
Name=DeaDBeeF
Exec=/opt/$APP/$APP
Icon=/opt/$APP/icons/$APP
Type=Application
Terminal=false
Categories=Audio;" >> /usr/share/applications/AM-$APP.desktop

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP
