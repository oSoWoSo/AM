#!/bin/sh

APP=conty-wine
REPO="Kron4ek/Conty"

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /usr/share/applications/AM-$APP.desktop /opt/$APP /usr/local/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE ARCHIVE
mkdir tmp
cd ./tmp

version=$(wget -q https://api.github.com/repos/$REPO/releases -O - | grep -w -v zsync | grep browser_download_url | grep -i "conty_wine.sh" | cut -d '"' -f 4 | head -1)
wget $version
echo "$version" >> /opt/$APP/version
cd ..

rm -R -f ./tmp

# LINK
ln -s /opt/$APP/$APP /usr/local/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM
# NOTE: CONTY HAS AN INTERNAL "-u" OPTION WHICH REBUILD CONTAINER WITH NEW UPDATE, BUT THIS CAUSES A BIG WORK OF THE CPU
# SO DOWNLOADING EVERYTHING AGAIN IS THE BEST OPTION, SEE https://github.com/Kron4ek/Conty#how-to-update
cat >> /opt/$APP/AM-updater << 'EOF'
#!/usr/bin/env bash
APP=conty-wine
REPO="Kron4ek/Conty"
version0=$(cat /opt/$APP/version)
version=$(wget -q https://api.github.com/repos/$REPO/releases -O - | grep -w -v zsync | grep browser_download_url | grep -i "conty_wine.sh" | cut -d '"' -f 4 | head -1)
if [ $version = $version0 ]; then
  echo "Update not needed!"
else
  notify-send "A new version of $APP is available, please wait"
  mkdir /opt/$APP/tmp
  cd /opt/$APP/tmp
  wget $version
  cd ..
  
  rm ./version
  echo $version >> ./version
  rm -R -f ./tmp ./*~
  notify-send "$APP is updated!"
fi
EOF
chmod a+x /opt/$APP/AM-updater

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP

# MESSAGE
echo "
 $APP is provided by https://github.com/$(echo $REPO | sed 's:/[^/]*$::')
"
