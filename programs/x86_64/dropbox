#!/bin/sh

APP=dropbox

# CREATING THE FOLDER
mkdir /opt/$APP
cd /opt/$APP;

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /usr/share/applications/AM-$APP.desktop /opt/$APP /usr/local/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

mkdir tmp;
cd tmp;

# CREATING THE APPIMAGE & DOWNLOADING THE DEPENDENCIES
wget -r -A dropbox-*-x86_64.pkg.tar.zst -nd https://aur.andontie.net/x86_64/;

version=$(ls /opt/$APP/tmp)
echo "$version" >> /opt/$APP/version

wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-$(uname -m).AppImage -O appimagetool
chmod a+x ./appimagetool

tar xf ./*.tar.zst;
mkdir $APP.AppDir;
mv ./opt ./$APP.AppDir;
mv ./usr ./$APP.AppDir;
cp ./$APP.AppDir/usr/share/applications/*desktop ./$APP.AppDir;
cp ./$APP.AppDir/usr/share/pixmaps/*svg ./$APP.AppDir;

echo '#!/bin/sh
HERE="$(dirname "$(readlink -f "${0}")")"
export PATH="${HERE}/usr/lib/systemd/system/:${HERE}/usr/lib/systemd/user/:${HERE}/opt/dropbox/:${HERE}/opt/dropbox/resources/:${HERE}/opt/dropbox/plugins/platforms/:${HERE}/opt/dropbox/images/hicolor/16x16/status/:${HERE}/opt/dropbox/images/emblems/${PATH:+:$PATH}"
export LD_LIBRARY_PATH="${HERE}/opt/dropbox/:${HERE}/opt/dropbox/plugins/platforms/${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
export XDG_DATA_DIRS="${HERE}/usr/share/${XDG_DATA_DIRS:+:$XDG_DATA_DIRS}"
EXEC="${HERE}/opt/dropbox/dropbox"
exec "${EXEC}"' >> ./$APP.AppDir/AppRun;
chmod a+x ./$APP.AppDir/AppRun;
cp ./$APP.AppDir/AppRun /opt/$APP/AppRun

ARCH=x86_64 ./appimagetool -n ./$APP.AppDir > /dev/null 2>&1

cd ..;
mv ./tmp/*.AppImage ./$APP;
chmod a+x ./$APP

rm -R -f ./tmp

# LINK
ln -s /opt/$APP/$APP /usr/local/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM
echo '#!/bin/sh
version0=$(cat /opt/'$APP'/version)
url="https://aur.andontie.net/x86_64/"
if curl -L -s $url | grep -ioF "$version0"; then
  echo "Update not needed, exit!"
 else
  notify-send "A new version of '$APP' is available, please wait!"
  mkdir /opt/'$APP'/tmp
  cd /opt/'$APP'/tmp
  wget -r -A dropbox-*-x86_64.pkg.tar.zst -nd https://aur.andontie.net/x86_64/;
  version=$(ls /opt/'$APP'/tmp)
  if test -f /opt/'$APP'/tmp/*tar.zst; then rm -R -f /opt/'$APP'/version
  fi
  echo "$version" >> /opt/'$APP'/version
  wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O appimagetool
  chmod a+x ./appimagetool
  tar xf ./*.tar.zst
  mkdir '$APP'.AppDir
  mv ./opt ./'$APP'.AppDir
  mv ./usr ./'$APP'.AppDir
  cp ./'$APP'.AppDir/usr/share/applications/*desktop ./'$APP'.AppDir
  cp ./'$APP'.AppDir/usr/share/pixmaps/*svg ./'$APP'.AppDir
  cp /opt/'$APP'/AppRun ./'$APP'.AppDir/AppRun
  chmod a+x ./'$APP'.AppDir/AppRun
  ARCH=x86_64 ./appimagetool -n ./'$APP'.AppDir > /dev/null 2>&1
  cd ..
  mv ./tmp/*.AppImage ./'$APP'
  chmod a+x ./'$APP'
  rm -R -f ./tmp
fi' >> /opt/$APP/AM-updater
chmod a+x /opt/$APP/AM-updater

# LAUNCHER & ICON
app=$(echo $APP | cut -c -3)
cd /opt/$APP
./$APP --appimage-extract *.desktop 1>/dev/null
./$APP --appimage-extract share/applications/*.desktop 1>/dev/null
./$APP --appimage-extract usr/share/applications/*.desktop 1>/dev/null
mv squashfs-root/*.desktop ./$APP.desktop 2>/dev/null
mv squashfs-root/share/applications/*.desktop ./$APP.desktop 2>/dev/null
mv squashfs-root/usr/share/applications/*.desktop ./$APP.desktop 2>/dev/null
if [ ! -e ./$APP.desktop ]; then 
	rm ./$APP.desktop; ./$APP --appimage-extract usr/share/applications/*$app*.desktop 1>/dev/null 
	mv squashfs-root/usr/share/applications/*.desktop ./$APP.desktop 2>/dev/null
fi
if [ ! -e ./$APP.desktop ]; then 
	rm ./$APP.desktop; ./$APP --appimage-extract share/applications/*$app*.desktop 1>/dev/null 
	mv squashfs-root/share/applications/*.desktop ./$APP.desktop 2>/dev/null
fi
CHANGEEXEC=$(cat ./$APP.desktop | grep Exec= | tr ' ' '\n' | tr '=' '\n' | tr '/' '\n' | grep $app | head -1)
sed -i "s#$CHANGEEXEC#$APP#g" ./$APP.desktop
sed -i "s#AppRun#$APP#g" ./$APP.desktop
sed -i "s#Exec=/bin/#Exec=#g" ./$APP.desktop
sed -i "s#Exec=/usr/bin/#Exec=#g" ./$APP.desktop
CHANGEICON=$(cat ./$APP.desktop | grep Icon= | head -1)
sed -i "s#$CHANGEICON#Icon=/opt/$APP/icons/$APP#g" ./$APP.desktop

mkdir icons
mv $(./$APP --appimage-extract *.png) ./icons/$APP 2>/dev/null
mv $(./$APP --appimage-extract *.svg) ./icons/$APP 2>/dev/null
./$APP --appimage-extract share/icons/*/*/*/* 1>/dev/null
./$APP --appimage-extract usr/share/icons/*/*/* 1>/dev/null
mv ./squashfs-root/share/icons/hicolor/22x22/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/share/icons/hicolor/24x24/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/share/icons/hicolor/32x32/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/share/icons/hicolor/48x48/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/share/icons/hicolor/64x64/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/share/icons/hicolor/128x128/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/share/icons/hicolor/256x256/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/share/icons/hicolor/512x512/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/share/icons/hicolor/scalable/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/usr/share/icons/hicolor/22x22/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/usr/share/icons/hicolor/24x24/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/usr/share/icons/hicolor/32x32/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/usr/share/icons/hicolor/48x48/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/usr/share/icons/hicolor/64x64/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/usr/share/icons/hicolor/128x128/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/usr/share/icons/hicolor/256x256/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/usr/share/icons/hicolor/512x512/apps/*$app* ./icons/$APP 2>/dev/null
mv ./squashfs-root/usr/share/icons/hicolor/scalable/apps/*$app* ./icons/$APP 2>/dev/null

rm -R -f /opt/$APP/squashfs-root
mv ./$APP.desktop /usr/share/applications/AM-$APP.desktop

currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP
# MESSAGE
echo "

      Dropbox Unofficial Appimage
 
     built from Arch User Repository
 
  OFFICIAL SITE: https://www.dropbox.com
  
";
