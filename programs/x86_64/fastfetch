#!/bin/sh

APP=fastfetch
SITE="fastfetch-cli/fastfetch"

# CREATE DIRECTORIES
if [ -z "$APP" ]; then exit 1; fi
mkdir -p "/opt/$APP/tmp" && cd "/opt/$APP/tmp" || exit 1

# ADD THE REMOVER
echo "#!/bin/sh
rm -f /usr/local/bin/$APP /usr/local/bin/flashfetch
rm -R -f /opt/$APP" > "/opt/$APP/remove"
chmod a+x "/opt/$APP/remove"

# DOWNLOAD AND PREPARE THE APP
# $version is also used for updates

version=$(curl -Ls https://api.github.com/repos/"$SITE"/releases | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -oi 'https.*linux-amd64.tar.gz$' | head -1)
wget "$version"
echo "$version" > "/opt/$APP/version"
tar fx ./*tar*
cd ..
mv --backup=t ./tmp/*/usr/* ./
rm -R -f ./tmp
chmod a+x /opt/"$APP"/bin/*

# LINK
ln -s "/opt/$APP/bin/$APP" "/usr/local/bin/$APP" 
ln -s /opt/"$APP"/bin/flashfetch /usr/local/bin/flashfetch

# SCRIPT TO UPDATE THE PROGRAM
cat >> "/opt/$APP/AM-updater" << 'EOF'
#!/bin/sh
APP=fastfetch
SITE="fastfetch-cli/fastfetch"
version0=$(cat /opt/$APP/version)
version=$(curl -Ls https://api.github.com/repos/"$SITE"/releases | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -o 'https.*linux-amd64.tar.gz$' | head -1)
if [ $version = $version0 ]; then
	echo "Update not needed!"
else
	notify-send "A new version of $APP is available, please wait"
	mkdir "/opt/$APP/tmp" && cd /opt/$APP/tmp || exit 1
	wget "$version"
	tar fx ./*tar*
	cd ..
	mv --backup=t ./tmp/*/usr/* ./
	echo "$version" > ./version
	rm -R -f ./tmp ./*~
	chmod a+x /opt/"$APP"/bin/*
	notify-send "$APP is updated!"
fi
EOF
chmod a+x "/opt/$APP/AM-updater"
