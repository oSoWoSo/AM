#!/bin/sh

APP=saucedacity
REPO="tenacityteam/saucedacity"

CATEGORIES="Audio"
ICONURL="https://raw.githubusercontent.com/tenacityteam/saucedacity/main/images/saucedacity.svg"

USER=$(echo $REPO | sed 's:/[^/]*$::')
REPO2=$(echo $REPO | sed 's:.*/::')
FILENAMEEXTENTION="/.*/.*.AppImage"
URL=https://github.com/$REPO/releases/latest
COMMENT=$(curl https://api.github.com/repos/$REPO 2>/dev/null | grep description | sed 's/"description": "//' | sed 's/",//')
APPNAME=$(echo $REPO2 | sed 's/-/ /g' | sed 's/_/ /g')

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /usr/share/applications/AM-$APP.desktop /opt/$APP /usr/local/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE ARCHIVE
mkdir tmp
cd ./tmp

download=$(wget -q https://api.github.com/repos/$REPO/releases/latest -O - | grep -E browser_download_url | awk -F '[""]' '{print $4}' | grep -w -v i386 | grep -w -v i686 | grep -w -v arm64 | grep -w -v armv7l | egrep ''$FILENAMEEXTENTION'' -o | head -1);
wget https:$download
version=$(wget -q https://api.github.com/repos/$REPO/releases/latest -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
echo "$version" >> /opt/$APP/version
if ls . | grep mage; then
	cd ..
	mv ./tmp/*mage ./$APP
	chmod a+x /opt/$APP/$APP
	rmdir ./tmp
elif ls . | grep .deb; then
	ar x ./*.deb
	tar fx ./data.tar.xz
	cd ..
	mv ./tmp//* ./
	rm -R -f ./tmp
elif ls . | grep .tar.bz2; then
	tar fx *.tar.bz2
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
elif ls . | grep .tar.gz; then
	tar fx *.tar.gz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
elif ls . | grep .tar.xz; then
	tar fx *.tar.xz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
elif ls ./tmp/ | grep .zip; then
	unzip *.zip
	dir=$(ls . | grep -w -v *.zip)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
fi

#-------------------------------------

# LINK
ln -s /opt/$APP/$APP /usr/local/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM
cat >> /opt/$APP/AM-updater << 'EOF'
#!/usr/bin/env bash
APP=saucedacity
REPO="tenacityteam/saucedacity"
FILENAMEEXTENTION="/.*/.*.AppImage"
version0=$(cat /opt/$APP/version)
url=https://github.com/$REPO/releases/latest
if curl -L -s $url | grep -ioF "$version0"; then
  echo "Update not needed!"
else
  notify-send "A new version of $APP is available, please wait"
  mkdir /opt/$APP/tmp
  cd /opt/$APP/tmp
  download=$(wget -q https://api.github.com/repos/$REPO/releases/latest -O - | grep -E browser_download_url | awk -F '[""]' '{print $4}' | grep -w -v i386 | grep -w -v i686 | grep -w -v arm64 | grep -w -v armv7l | egrep ''$FILENAMEEXTENTION'' -o | head -1);
  wget https:$download
  version=$(wget -q https://api.github.com/repos/$REPO/releases/latest -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
  if ls . | grep mage; then
	cd ..
  	if test -f ./tmp/*mage; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/*mage ./$APP
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  elif ls . | grep .deb; then
	ar x ./*.deb
	tar fx ./data.tar.xz
	cd ..
  	if test -f ./tmp/*.deb; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp//* ./
  	rm -R -f ./tmp ./*~
  elif ls . | grep .tar.bz2; then
	tar fx *.tar.bz2
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
  	if test -f ./tmp/*.tar.bz2; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  elif ls . | grep .tar.gz; then
	tar fx *.tar.gz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
  	if test -f ./tmp/*.tar.gz; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  elif ls . | grep .tar.xz; then
	tar fx *.tar.xz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
  	if test -f ./tmp/*.tar.xz; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  elif ls ./tmp/ | grep .zip; then
	unzip *.zip
	dir=$(ls . | grep -w -v *.zip)
	cd ..
  	if test -f ./tmp/*.zip; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  fi
fi
EOF
chmod a+x /opt/$APP/AM-updater

# LAUNCHER
rm /usr/share/applications/AM-$APP.desktop
echo "[Desktop Entry]
Name=@PROPER_NAME@
GenericName=Sound Editor
GenericName[ar]=محرر أصوات
GenericName[ca]=Editor d'àudio
GenericName[co]=Editore audio
GenericName[da]=Lydredigeringsprogram
GenericName[de]=Audio-Editor
GenericName[el]=Επεξεργαστής ήχου
GenericName[es]=Editor de audio
GenericName[fr]=Éditeur audio
GenericName[hi]=ध्वनि संपादक
GenericName[ja]=音声編集ソフト
GenericName[ko]=오디오 편집기
GenericName[lt]=Garsų rengyklė
GenericName[nl]=Geluidseditor
GenericName[pt_BR]=Editor de áudio
GenericName[pt_PT]=Editor de áudio
GenericName[ru]=Редактор звуковых файлов
GenericName[sk]=Zvukový Editor
GenericName[tr]=Ses Düzenleyici
GenericName[uk]=Редактор звукових файлів
GenericName[zh_CN]=音频编辑器
GenericName[zh_TW]=音訊編輯器
Comment=Record and edit audio files
Comment[ar]=سجل و حرر ملفات صوت
Comment[ca]=Enregistreu i editeu els fitxers d'àudio
Comment[co]=Arregistrà è mudificà schedarii audio
Comment[da]=Optag og rediger lydfiler
Comment[de]=Audio-Dateien aufnehmen und bearbeiten
Comment[el]=Ηχογράφηση και επεξεργασία αρχείων ήχου
Comment[es]=Grabar y editar archivos de audio
Comment[fr]=Enregistrer et éditer des fichiers audio
Comment[hi]=ऑडियो फ़ाइल अंकित व संपादित करता है
Comment[ja]=音声ファイルの録音と編集
Comment[ko]=오디오 파일 녹음과 편집
Comment[lt]=Įrašyti ir montuoti garso failus
Comment[nl]=Audiobestanden opnemen en bewerken
Comment[pt_BR]=Gravar e editar arquivos de áudio
Comment[pt_PT]=Gravar e editar ficheiros de áudio
Comment[ru]=Запись и редактирование звуковых файлов
Comment[sk]=Nahráva a upravuje audio súbory.
Comment[tr]=Ses dosyalarını kaydetme ve düzenleme
Comment[uk]=Запис і редагування звукових файлів
Comment[zh_CN]=录音和编辑音频文件
Comment[zh_TW]=錄音和編輯音訊檔案
Icon=/opt/$APP/icons/$APP
Type=Application
Categories=AudioVideo;Audio;AudioVideoEditing;Midi;Recorder;
Keywords=audio;editor;audacity;sound;ton;wave;
Exec=$APP %F
StartupNotify=false
Terminal=false" >> /usr/share/applications/AM-$APP.desktop

# ICON
mkdir /opt/$APP/icons
wget $ICONURL -O /opt/$APP/icons/$APP

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP

# MESSAGE
echo "

 $APPNAME is provided by https://github.com/$USER

"
