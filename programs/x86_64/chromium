#!/bin/sh

APP=chromium
REPO="ivan-hc/Chromium-Web-Browser-appimage"
BINARYNAME="chromium-browser"
ICONNAME="chromium"

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
cat >> /opt/$APP/remove << 'EOF'
#!/bin/sh
APP=chromium
BINARYNAME="chromium-browser"
ICONNAME="chromium"
rm -R -f /usr/local/share/applications/$APP.desktop 2>/dev/null
rm -R -f /usr/local/share/pixmaps/$ICONNAME 2>/dev/null
rmdir /usr/local/share/applications 2>/dev/null
rmdir /usr/local/share/pixmaps 2>/dev/null
rm -R -f /usr/local/bin/$BINARYNAME 2>/dev/null
rm -R -f /opt/$APP 2>/dev/null
EOF
chmod a+x /opt/$APP/remove

# DOWNLOAD THE ARCHIVE
mkdir tmp
cd ./tmp

download=$(wget -q https://api.github.com/repos/$REPO/releases/latest -O - | grep -E browser_download_url | awk -F '[""]' '{print $4}' | grep -w -v i386 | grep -w -v i686 | grep -w -v arm64 | grep -w -v armv7l | egrep '/.*/.*.AppImage' -o | head -1);
wget https:$download
version=$(wget -q https://api.github.com/repos/$REPO/releases/latest -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
echo "$version" >> /opt/$APP/version
cd ..
mv ./tmp/*mage ./$APP
chmod a+x /opt/$APP/$APP
rmdir ./tmp

# LINK
ln -s /opt/$APP/$APP /usr/local/bin/$BINARYNAME

# SCRIPT TO UPDATE THE PROGRAM
cat >> /opt/$APP/AM-updater << 'EOF'
#!/usr/bin/env bash
APP=chromium
REPO="ivan-hc/Chromium-Web-Browser-appimage"
version0=$(cat /opt/$APP/version)
version=$(wget -q https://api.github.com/repos/$REPO/releases/latest -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
if [ $version = $version0 ]; then
  echo "Update not needed!"
else
  notify-send "A new version of $APP is available, please wait"
  mkdir /opt/$APP/tmp
  cd /opt/$APP/tmp
  download=$(wget -q https://api.github.com/repos/$REPO/releases/latest -O - | grep -E browser_download_url | awk -F '[""]' '{print $4}' | grep -w -v i386 | grep -w -v i686 | grep -w -v arm64 | grep -w -v armv7l | egrep '/.*/.*.AppImage' -o | head -1);
  wget https:$download
  version=$(wget -q https://api.github.com/repos/$REPO/releases/latest -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
  if ls . | grep mage; then
	cd ..
  	if test -f ./tmp/*mage; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/*mage ./$APP
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  fi
fi
EOF
chmod a+x /opt/$APP/AM-updater

# LAUNCHER & ICON
mkdir -p /usr/local/share/applications
mv $(./$APP --appimage-extract *.desktop) /usr/local/share/applications/$APP.desktop 2>/dev/null
mkdir -p /usr/local/share/pixmaps
mv $(./$APP --appimage-extract *.png) /usr/local/share/pixmaps/$ICONNAME.png 2>/dev/null
mv $(./$APP --appimage-extract *.svg) /usr/local/share/pixmaps/$ICONNAME.svg 2>/dev/null
rmdir squashfs-root

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP

# MESSAGE
echo "
 $APPNAME is provided by https://github.com/$(echo $REPO | sed 's:/[^/]*$::')
"
