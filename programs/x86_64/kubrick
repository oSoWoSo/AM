#!/bin/sh

APP=kdegames
REPO="ivan-hc/KDE-games-suite-appimage"

CATEGORIES="Game"

USER=$(echo $REPO | sed 's:/[^/]*$::')
REPO2=$(echo $REPO | sed 's:.*/::')
FILENAMEEXTENTION="/.*/.*x86_64.AppImage"
URL=https://github.com/$REPO/releases/latest
COMMENT=$(curl https://api.github.com/repos/$REPO 2>/dev/null | grep description | sed 's/"description": "//' | sed 's/",//')
APPNAME=$(echo $REPO2 | sed 's/-/ /g' | sed 's/_/ /g')

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /usr/share/applications/AM-$APP*.desktop /opt/$APP /usr/games/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE ARCHIVE
mkdir tmp
cd ./tmp

version=$(curl -s https://api.github.com/repos/ivan-hc/KDE-games-suite-appimage/releases/latest | grep browser_download_url | cut -d '"' -f 4 | head -1)
echo "$version" >> /opt/$APP/version
wget $version
if ls . | grep mage; then
	cd ..
	mv ./tmp/*mage ./$APP
	chmod a+x /opt/$APP/$APP
	rmdir ./tmp
elif ls . | grep .deb; then
	ar x ./*.deb
	tar fx ./data.tar.xz
	cd ..
	mv ./tmp//* ./
	rm -R -f ./tmp
elif ls . | grep .tar.bz2; then
	tar fx *.tar.bz2
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
elif ls . | grep .tar.gz; then
	tar fx *.tar.gz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
elif ls . | grep .tar.xz; then
	tar fx *.tar.xz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
elif ls ./tmp/ | grep .zip; then
	unzip *.zip
	dir=$(ls . | grep -w -v *.zip)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
fi

#-------------------------------------

# LINK
ln -s /opt/$APP/$APP /usr/local/games/$APP

# SCRIPT TO UPDATE THE PROGRAM
cat >> /opt/$APP/AM-updater << 'EOF'
#!/usr/bin/env bash
APP=kdegames
REPO="ivan-hc/KDE-games-suite-appimage"
FILENAMEEXTENTION="/.*/.*x86_64.AppImage"
version0=$(cat /opt/$APP/version)
version=$(curl -s https://api.github.com/repos/ivan-hc/KDE-games-suite-appimage/releases/latest | grep browser_download_url | cut -d '"' -f 4 | head -1)
if [ $version = $version0 ]; then
  echo "Update not needed!"
else
  notify-send "A new version of $APP is available, please wait"
  mkdir /opt/$APP/tmp
  cd /opt/$APP/tmp
  version=$(curl -s https://api.github.com/repos/ivan-hc/KDE-games-suite-appimage/releases/latest | grep browser_download_url | cut -d '"' -f 4 | head -1)
  wget $version
  if ls . | grep mage; then
	cd ..
  	if test -f ./tmp/*mage; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/*mage ./$APP
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  elif ls . | grep .deb; then
	ar x ./*.deb
	tar fx ./data.tar.xz
	cd ..
  	if test -f ./tmp/*.deb; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp//* ./
  	rm -R -f ./tmp ./*~
  elif ls . | grep .tar.bz2; then
	tar fx *.tar.bz2
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
  	if test -f ./tmp/*.tar.bz2; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  elif ls . | grep .tar.gz; then
	tar fx *.tar.gz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
  	if test -f ./tmp/*.tar.gz; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  elif ls . | grep .tar.xz; then
	tar fx *.tar.xz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
  	if test -f ./tmp/*.tar.xz; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  elif ls ./tmp/ | grep .zip; then
	unzip *.zip
	dir=$(ls . | grep -w -v *.zip)
	cd ..
  	if test -f ./tmp/*.zip; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  fi
fi
EOF
chmod a+x /opt/$APP/AM-updater

# LAUNCHERS AND ICONS
mkdir /opt/$APP/icons
cd /opt/$APP/icons
wget https://github.com/$REPO/releases/download/20.12.0/icons.zip
unzip -qq icons.zip
cd ..

mkdir /opt/$APP/launchers
cd /opt/$APP/launchers
wget https://github.com/$REPO/releases/download/20.12.0/launchers.zip
unzip -qq launchers.zip
sed -i "s#Exec=#Exec=kdegames #g" /opt/$APP/launchers/*.desktop
sed -i "s#Icon=#Icon=/opt/kdegames/icons/#g" /opt/$APP/launchers/*.desktop
cp /opt/$APP/launchers/*.desktop /usr/share/applications/
cd ..
rm -R -f /opt/$APP/launchers

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP

# MESSAGE
echo "

 $APPNAME is provided by https://github.com/$USER

"
