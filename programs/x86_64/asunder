#!/bin/sh

APP=asunder
REPO="ivan-hc/Database-of-pkg2appimaged-packages"

CATEGORIES="Audio"
ICONURL="http://littlesvr.ca/asunder/favicon.ico"

USER=$(echo $REPO | sed 's:/[^/]*$::')
REPO2=$(echo $REPO | sed 's:.*/::')
FILENAMEEXTENTION="/.*/.*.AppImage"
url=https://github.com/$REPO/releases/download/$APP
COMMENT=$(curl https://api.github.com/repos/$REPO 2>/dev/null | grep description | sed 's/"description": "//' | sed 's/",//')
APPNAME=$(echo $REPO2 | sed 's/-/ /g' | sed 's/_/ /g')

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /usr/share/applications/AM-$APP.desktop /opt/$APP /usr/local/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE ARCHIVE
mkdir tmp
cd ./tmp

download=$(wget -q https://api.github.com/repos/$REPO/releases -O - | grep $APP | grep -E browser_download_url | awk -F '[""]' '{print $4}' | grep -w -v i386 | grep -w -v i686 | grep -w -v arm64 | grep -w -v armv7l | egrep ''$FILENAMEEXTENTION'' -o | head -1);
wget https:$download
version=$(ls .)
echo "$version" >> /opt/$APP/version
if ls . | grep mage; then
	cd ..
	mv ./tmp/*mage ./$APP
	chmod a+x /opt/$APP/$APP
	rmdir ./tmp
elif ls . | grep .deb; then
	ar x ./*.deb
	tar fx ./data.tar.xz
	cd ..
	mv ./tmp//* ./
	rm -R -f ./tmp
elif ls . | grep .tar.bz2; then
	tar fx *.tar.bz2
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
elif ls . | grep .tar.gz; then
	tar fx *.tar.gz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
elif ls . | grep .tar.xz; then
	tar fx *.tar.xz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
elif ls ./tmp/ | grep .zip; then
	unzip *.zip
	dir=$(ls . | grep -w -v *.zip)
	cd ..
	mv ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
fi

#-------------------------------------

# LINK
ln -s /opt/$APP/$APP /usr/local/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM
cat >> /opt/$APP/AM-updater << 'EOF'
#!/usr/bin/env bash
APP=asunder
REPO="ivan-hc/Database-of-pkg2appimaged-packages"
FILENAMEEXTENTION="/.*/.*.AppImage"
version0=$(cat /opt/$APP/version)
url=https://github.com/$REPO/releases/download/$APP
if wget --spider $url/$version0 2> /dev/null; then
  echo "Update not needed!"
else
  notify-send "A new version of $APP is available, please wait"
  mkdir /opt/$APP/tmp
  cd /opt/$APP/tmp
  download=$(wget -q https://api.github.com/repos/$REPO/releases -O - | grep $APP | grep -E browser_download_url | awk -F '[""]' '{print $4}' | grep -w -v i386 | grep -w -v i686 | grep -w -v arm64 | grep -w -v armv7l | egrep ''$FILENAMEEXTENTION'' -o | head -1);
  wget https:$download
  version=$(ls .)
  if ls . | grep mage; then
	cd ..
  	if test -f ./tmp/*mage; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/*mage ./$APP
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  elif ls . | grep .deb; then
	ar x ./*.deb
	tar fx ./data.tar.xz
	cd ..
  	if test -f ./tmp/*.deb; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp//* ./
  	rm -R -f ./tmp ./*~
  elif ls . | grep .tar.bz2; then
	tar fx *.tar.bz2
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
  	if test -f ./tmp/*.tar.bz2; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  elif ls . | grep .tar.gz; then
	tar fx *.tar.gz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
  	if test -f ./tmp/*.tar.gz; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  elif ls . | grep .tar.xz; then
	tar fx *.tar.xz
	dir=$(ls . | grep -w -v *.tar.*)
	cd ..
  	if test -f ./tmp/*.tar.xz; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  elif ls ./tmp/ | grep .zip; then
	unzip *.zip
	dir=$(ls . | grep -w -v *.zip)
	cd ..
  	if test -f ./tmp/*.zip; then rm ./version
  	fi
  	echo $version >> ./version
	mv --backup=t ./tmp/$(echo $dir)/* ./
	rm -R -f ./tmp
  fi
fi
EOF
chmod a+x /opt/$APP/AM-updater

# LAUNCHER
echo "[Desktop Entry]
Name=Asunder CD Ripper
Name[de]=Asunder
Name[fr]=Asunder
Name[hu]=Asunder
Name[sv]=Asunder
Name[ru]=Asunder
GenericName=Audio CD Ripper
GenericName[de]=Ein graphischer CD-Ripper und Encoder
GenericName[es]=Un extractor de Audio CD
GenericName[fr]=Extracteur de CD
GenericName[hu]=Audió CD Ripper és Tömörítő
GenericName[ru]=Копирование звуковых CD
Comment=An application to save tracks from an Audio CD as WAV, MP3, OGG, FLAC, and/or Wavpack.
Comment[de]=Oberfläche zur Erstellung von Audio-Dateien
Comment[es]=Una aplicación para extraer las pistas de un CD de Auido como WAV, MP3, OGG, FLAC y/o Wavpack
Comment[hu]=Egy alkalmazás ami az Audió CD-n lévő sávokat lementi, MP3, OGG, FLAC és/vagy Wavpack formátumba.
Comment[ru]=Программа для сохранения звуковых дорожек CD в файлы форматов WAV, MP3, OGG, FLAC и/или Wavpack.
Comment[sv]=Ett program för att spara spår från en ljudskiva som WAV, MP3, OGG och/eller FLAC.
Exec=$APP
Icon=/opt/$APP/icons/$APP
Terminal=false
StartupNotify=true
Type=Application
Categories=AudioVideo;Audio;
MimeType=x-content/audio-cdda;
Keywords=CD;Extraction;Ripper;MP3;" >> /usr/share/applications/AM-$APP.desktop;

# ICON
mkdir /opt/$APP/icons
wget $ICONURL -O /opt/$APP/icons/$APP

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP

# MESSAGE
echo "

 This AppImage of $APP is provided by https://github.com/$USER

"
