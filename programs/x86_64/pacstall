#!/bin/sh

APP=pacstall
 
# CREATING THE FOLDER
mkdir /opt/$APP
cd /opt/$APP;

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /opt/$APP /usr/local/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove
APP=pacstall
mkdir tmp;
cd tmp;

# DOWNLOADING THE DEPENDENCIES
wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-$(uname -m).AppImage -O appimagetool
wget https://raw.githubusercontent.com/ivan-hc/AM-application-manager/main/tools/pkg2appimage # 64 BIT ONLY (comment to disable)
# wget https://github.com/ivan-hc/pkg2appimage-32bit/releases/download/continuous/pkg2appimage-i386.AppImage -O pkg2appimage # 32 BIT ONLY (uncomment to enable)
chmod a+x ./appimagetool ./pkg2appimage

# CREATING THE APPIMAGE: APPDIR FROM A RECIPE...
cat >> recipe.yml << 'EOF'
app: pacstall
binpatch: true
ingredients:
  dist: stable
  sources:
    - deb http://deb.debian.org/debian/ stable main contrib non-free
    - deb http://deb.debian.org/debian-security/ stable-security main contrib non-free
    - deb http://deb.debian.org/debian stable-updates main contrib non-free
    - deb http://deb.debian.org/debian stable-backports main contrib non-free
  script:
    - v=$(wget -q https://api.github.com/repos/pacstall/pacstall/releases/latest -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
    - wget https://github.com/pacstall/pacstall/releases/download/$v/pacstall-$v.deb
  packages:
    - pacstall
EOF

cp /opt/$APP/tmp/recipe.yml /opt/$APP/recipe.yml

./pkg2appimage ./recipe.yml;

# ...DOWNLOADING LIBUNIONPRELOAD...
wget https://github.com/project-portable/libunionpreload/releases/download/amd64/libunionpreload.so
chmod a+x libunionpreload.so
mv ./libunionpreload.so ./$APP/$APP.AppDir/

# ...REPLACING THE EXISTING APPRUN WITH A CUSTOM ONE...
rm -R -f ./$APP/$APP.AppDir/AppRun
cat > AppRun << 'EOF'
#!/bin/sh
HERE="$(dirname "$(readlink -f "${0}")")"
export UNION_PRELOAD="${HERE}"
export LD_PRELOAD="${HERE}/libunionpreload.so"
export PATH="${HERE}"/usr/bin/:"${HERE}"/usr/sbin/:"${HERE}"/usr/games/:"${HERE}"/bin/:"${HERE}"/sbin/:"${PATH}"
export LD_LIBRARY_PATH=/usr/lib/i386-linux-gnu/:/usr/lib/x86_64-linux-gnu/:"${HERE}"/usr/lib/:"${HERE}"/usr/lib/i386-linux-gnu/:"${HERE}"/usr/lib/x86_64-linux-gnu/:"${HERE}"/usr/lib32/:"${HERE}"/usr/lib64/:"${HERE}"/lib/:"${HERE}"/lib/i386-linux-gnu/:"${HERE}"/lib/x86_64-linux-gnu/:"${HERE}"/lib32/:"${HERE}"/lib64/:"${LD_LIBRARY_PATH}"
export PYTHONPATH="${HERE}"/usr/share/pyshared/:"${PYTHONPATH}"
export PYTHONHOME="${HERE}"/usr/
export XDG_DATA_DIRS="${HERE}"/usr/share/:"${XDG_DATA_DIRS}"
export PERLLIB="${HERE}"/usr/share/perl5/:"${HERE}"/usr/lib/perl5/:"${PERLLIB}"
export GSETTINGS_SCHEMA_DIR="${HERE}"/usr/share/glib-2.0/schemas/:"${GSETTINGS_SCHEMA_DIR}"
export QT_PLUGIN_PATH="${HERE}"/usr/lib/qt4/plugins/:"${HERE}"/usr/lib/i386-linux-gnu/qt4/plugins/:"${HERE}"/usr/lib/x86_64-linux-gnu/qt4/plugins/:"${HERE}"/usr/lib32/qt4/plugins/:"${HERE}"/usr/lib64/qt4/plugins/:"${HERE}"/usr/lib/qt5/plugins/:"${HERE}"/usr/lib/i386-linux-gnu/qt5/plugins/:"${HERE}"/usr/lib/x86_64-linux-gnu/qt5/plugins/:"${HERE}"/usr/lib32/qt5/plugins/:"${HERE}"/usr/lib64/qt5/plugins/:"${QT_PLUGIN_PATH}"
exec ${HERE}/bin/pacstall "$@"
EOF
chmod a+x AppRun
cp ./AppRun /opt/$APP/
mv ./AppRun ./$APP/$APP.AppDir

# ...IMPORT THE LAUNCHER AND THE ICON TO THE APPDIR (uncomment if not available)...
wget https://raw.githubusercontent.com/pacstall/website/master/client/public/pacstall.svg
mv ./pacstall.svg ./$APP/$APP.AppDir/

echo "[Desktop Entry]
Name=pacstall
Exec=pacstall
Comment=
Icon=pacstall
Type=Application
Categories=Utility;" >> ./$APP/$APP.AppDir/$APP.desktop

# ...EXPORT THE APPDIR TO AN APPIMAGE!
ARCH=x86_64 ./appimagetool -n ./$APP/$APP.AppDir;

version=$(wget -q https://api.github.com/repos/pacstall/pacstall/releases/latest -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
echo "$version" >> /opt/$APP/version

cd ..;
mv ./tmp/*.AppImage ./$APP-appimage;
chmod a+x ./$APP-appimage

rm -R -f ./tmp

# LINK
ln -s /opt/$APP/$APP-appimage /usr/local/bin/$APP-appimage

# SCRIPT TO UPDATE THE PROGRAM
cat >> /opt/$APP/AM-updater << 'EOF'
#!/usr/bin/env bash
APP=pacstall
version0=$(cat /opt/$APP/version)
version=$(wget -q https://api.github.com/repos/pacstall/pacstall/releases/latest -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
if [ $version0 = $version ]; then
  echo "Update not needed, exit!"
else
  notify-send "A new version of pacstall is available, please wait!"
  mkdir /opt/$APP/tmp
  cd /opt/$APP/tmp
  wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O appimagetool
  wget https://raw.githubusercontent.com/ivan-hc/AM-application-manager/main/tools/pkg2appimage
  chmod a+x ./appimagetool ./pkg2appimage
  cp /opt/$APP/recipe.yml /opt/$APP/tmp/recipe.yml
  ./pkg2appimage ./recipe.yml;
  wget https://github.com/project-portable/libunionpreload/releases/download/amd64/libunionpreload.so
  chmod a+x libunionpreload.so
  mv ./libunionpreload.so ./$APP/$APP.AppDir/
  rm -R -f ./$APP/$APP.AppDir/AppRun
  cp /opt/$APP/AppRun ./$APP/$APP.AppDir/
  wget https://raw.githubusercontent.com/pacstall/website/master/client/public/pacstall.svg
  mv ./pacstall.svg ./$APP/$APP.AppDir/
  echo "[Desktop Entry]
Name=pacstall
Exec=pacstall
Comment=
Icon=pacstall
Type=Application
Categories=Utility;" >> ./$APP/$APP.AppDir/$APP.desktop
  ARCH=x86_64 ./appimagetool -n ./$APP/$APP.AppDir
  cd ..
  rm -R -f /opt/$APP/version
  version=$(wget -q https://api.github.com/repos/pacstall/pacstall/releases/latest -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
  echo "$version" >> /opt/$APP/version
  mv ./tmp/*.AppImage ./$APP-appimage;
  chmod a+x ./$APP-appimage
  rm -R -f ./tmp
fi
EOF
chmod a+x /opt/$APP/AM-updater

currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP

echo "

 pacstall is provided by https://pacstall.dev
  
";
