#!/bin/sh

clear
echo ""
read -r -p " Wine AppImage installer helper

 What architecture do your Windows programs work for?

 1) I use both 32-bit and 64-bit programs
 2) I only use 32-bit programs (e.g. old games / retro gaming)

 What do you choose between 1 and 2? " response
case "$response" in
1) read -r -p "
 The following versions of WINE are always updated to the latest version
 and are distributed in AppImage format (between 400 and 500 MB of disk 
 space) from https://github.com/mmtrt/WINE_AppImage which is currently 
 the most complete WINE AppImage version available.

 Choose a version of WINE:

 1) Wine Stable, the current stable wine version (recommended)
 2) Wine Staging, the most recent testing wine version (for testers)
 3) Wine Devel, used to provide development headers (for developers)

 What do you choose between 1, 2 and 3? " response1
	case "$response1" in
	    1) APP=wine-stable

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /opt/$APP /usr/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE APPIMAGE
mkdir tmp
cd ./tmp
REPO=mmtrt/WINE_AppImage
version=$(curl -s https://api.github.com/repos/$REPO/releases | grep browser_download_url | grep stable_ | cut -d '"' -f 4 | head -1)
wget $version
cd ..
mv ./tmp/*mage ./$APP
chmod a+x /opt/$APP/$APP

cd ./tmp
wget https://github.com/AppImage/AppImageUpdate/releases/download/continuous/appimageupdatetool-x86_64.AppImage
cd ..
mv ./tmp/appimageupdatetool-x86_64.AppImage ./updater
chmod a+x ./updater

rmdir ./tmp

# LINK
ln -s /opt/$APP/$APP /usr/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM

echo '#!/bin/sh' >> /opt/$APP/AM-updater
echo "APP=$APP" >> /opt/$APP/AM-updater
echo 'cd /opt/$APP
./updater -O ./$APP
chmod a+x /opt/$APP/$APP
rm -R -f /opt/$APP/*zs-old && rm -R -f /opt/$APP/*.part' >> /opt/$APP/AM-updater
chmod a+x /opt/$APP/AM-updater

ln -s /usr/bin/$APP /opt/$APP/wine

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP;;
	    2) APP=wine-staging

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /opt/$APP /usr/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE APPIMAGE
mkdir tmp
cd ./tmp
REPO=mmtrt/WINE_AppImage
version=$(curl -s https://api.github.com/repos/$REPO/releases | grep browser_download_url | grep staging_ | cut -d '"' -f 4 | head -1)
wget $version
cd ..
mv ./tmp/*mage ./$APP
chmod a+x /opt/$APP/$APP

cd ./tmp
wget https://github.com/AppImage/AppImageUpdate/releases/download/continuous/appimageupdatetool-x86_64.AppImage
cd ..
mv ./tmp/appimageupdatetool-x86_64.AppImage ./updater
chmod a+x ./updater

rmdir ./tmp

# LINK
ln -s /opt/$APP/$APP /usr/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM

echo '#!/bin/sh' >> /opt/$APP/AM-updater
echo "APP=$APP" >> /opt/$APP/AM-updater
echo 'cd /opt/$APP
./updater -O ./$APP
chmod a+x /opt/$APP/$APP
rm -R -f /opt/$APP/*zs-old && rm -R -f /opt/$APP/*.part' >> /opt/$APP/AM-updater
chmod a+x /opt/$APP/AM-updater

ln -s /usr/bin/$APP /opt/$APP/wine

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP;;
	    3) APP=wine-devel

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /opt/$APP /usr/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE APPIMAGE
mkdir tmp
cd ./tmp
REPO=mmtrt/WINE_AppImage
version=$(curl -s https://api.github.com/repos/$REPO/releases | grep browser_download_url | grep devel_ | cut -d '"' -f 4 | head -1)
wget $version
cd ..
mv ./tmp/*mage ./$APP
chmod a+x /opt/$APP/$APP

cd ./tmp
wget https://github.com/AppImage/AppImageUpdate/releases/download/continuous/appimageupdatetool-x86_64.AppImage
cd ..
mv ./tmp/appimageupdatetool-x86_64.AppImage ./updater
chmod a+x ./updater

rmdir ./tmp

# LINK
ln -s /opt/$APP/$APP /usr/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM

echo '#!/bin/sh' >> /opt/$APP/AM-updater
echo "APP=$APP" >> /opt/$APP/AM-updater
echo 'cd /opt/$APP
./updater -O ./$APP
chmod a+x /opt/$APP/$APP
rm -R -f /opt/$APP/*zs-old && rm -R -f /opt/$APP/*.part' >> /opt/$APP/AM-updater
chmod a+x /opt/$APP/AM-updater

ln -s /usr/bin/$APP /opt/$APP/wine

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP;;
	    *) echo ""; echo " No valid argument was chosen: installation aborted! "; rm -f /opt/am/.cache/wine && exit;;
  esac;;
2) read -r -p "
 The following versions of WINE are distributed in AppImage format
 (between 200 and 300 MB of disk space) from various sources.

 Choose a version of WINE32:

 1) Wine32 (latest) from https://github.com/pawitp/wine-appimage
 2) Wine 4.21 from https://github.com/ferion11/Wine_Appimage
 3) Wine 5.11 from https://github.com/ferion11/Wine_Appimage
 4) Wine 6.0.1 from https://github.com/pawitp/wine-appimage
 5) Proton (Wine 5.11) from https://github.com/ferion11/Proton_Appimage

 What do you choose between 1, 2, 3, 4 and 5? " response1
	case "$response1" in
	    1) APP=wine32

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /usr/share/applications/$APP.desktop /opt/$APP /usr/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE APPIMAGE
mkdir tmp
cd ./tmp

v=$(wget -q https://api.github.com/repos/pawitp/wine-appimage/releases/latest -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
echo "$v" >> /opt/$APP/version
wget https://github.com/pawitp/wine-appimage/releases/download/$v/wine

cd ..
mv ./tmp/wine ./$APP
chmod a+x /opt/$APP/$APP
rmdir ./tmp

# LINK
ln -s /opt/$APP/$APP /usr/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM

echo '#!/bin/sh' >> /opt/$APP/AM-updater
echo "APP=$APP" >> /opt/$APP/AM-updater

echo 'version0=$(cat /opt/$APP/version)
url=https://api.github.com/repos/pawitp/wine-appimage/releases/latest' >> /opt/$APP/AM-updater

echo 'if curl -L -s $url | grep -ioF "$version0"; then' >> /opt/$APP/AM-updater
echo '  echo "Update not needed!".'  >> /opt/$APP/AM-updater

echo 'else' >> /opt/$APP/AM-updater

echo "  notify-send 'A new version of $APP is available, please wait'" >> /opt/$APP/AM-updater
echo "  mkdir /opt/$APP/tmp
  cd /opt/$APP/tmp" >> /opt/$APP/AM-updater

function1='$(wget -q https://api.github.com/repos/pawitp/wine-appimage/releases/latest -O -'
part0='{print $4}'
part1='[""]'
function2="grep -E tag_name | awk -F '$part1' '$part0')"

echo "  v=$function1 | $function2" >> /opt/$APP/AM-updater
echo '  wget https://github.com/pawitp/wine-appimage/releases/download/$v/wine
  cd ..
  if test -f ./tmp/wine; then rm ./version
  fi
  echo "$v" >> ./version' >> /opt/$APP/AM-updater
echo "  mv ./tmp/wine ./$APP
  chmod a+x /opt/$APP/$APP
  rmdir ./tmp
fi" >> /opt/$APP/AM-updater
chmod a+x /opt/$APP/AM-updater

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP;;
	    2) APP=wine-4.21

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /opt/$APP /usr/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE PROGRAM
wget https://github.com/ferion11/Wine_Appimage/releases/download/v4.21/wine-staging-linux-x86-v4.21-PlayOnLinux-x86_64.AppImage -O wine
chmod a+x /opt/$APP/wine

# LINK
ln -s /opt/$APP/wine /usr/bin/$APP

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP;;
	    3) APP=wine-5.11

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /opt/$APP /usr/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE PROGRAM
wget https://github.com/ferion11/Wine_Appimage/releases/download/v5.11/wine-staging-linux-x86-v5.11-PlayOnLinux-x86_64.AppImage -O wine
chmod a+x /opt/$APP/wine

# LINK
ln -s /opt/$APP/wine /usr/bin/$APP

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP;;
	    4) APP=wine-6.0.1

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /opt/$APP /usr/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE PROGRAM
wget https://github.com/pawitp/wine-appimage/releases/download/wine-6.0.1/wine
chmod a+x /opt/$APP/wine

# LINK
ln -s /opt/$APP/wine /usr/bin/$APP

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP;;
	    5) APP=proton-5.11

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /opt/$APP /usr/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE APPIMAGE
mkdir tmp;
cd ./tmp;
wget https://github.com/ferion11/Proton_Appimage/releases/download/continuous-f11wine/proton-linux-x86-v5.11-f11-x86_64.AppImage
cd ..
mv ./tmp/*mage ./wine
chmod a+x ./wine
rmdir ./tmp

# LINK
ln -s /opt/$APP/wine /usr/bin/$APP

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP;;
	    *) echo ""; echo " No valid argument was chosen: installation aborted! "; rm -f /opt/am/.cache/wine && exit;;
  esac;;
*) echo ""; echo " No valid argument was chosen: installation aborted! "; rm -f /opt/am/.cache/wine && exit;;
esac
