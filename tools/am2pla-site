#!/usr/bin/env bash

# THIS IS A SCRIPT i USE TO CREATE AND UPDATE THE APPLICATION LIST ON https://portable-linux-apps.github.io/
# ONCE CREATED, THE PAGE WILL APPEAR LIKE THIS: https://portable-linux-apps.github.io/apps.html
# FIRST OF ALL, WE NEED TO CREATE A FILE CONTAINING ALL THE ARGUMENTS THAT THIS SCRIPT MUST READ

AMREPO="https://raw.githubusercontent.com/ivan-hc/AM/main"
arch="x86_64"

# ENTER THE DESKTOP DIRECTORY
cd "$(xdg-user-dir DESKTOP)" || exit 1

# GET THE NAMES OF ALL APPLICATION
cp /opt/am/"$arch"-apps "$arch"-apps && echo -e "$(cat ./"$arch"-apps | awk -v FS="(◆ | : )" '{print $2}')" >> args

# GET THE EXACT NUMBER OF AVAILABLE APPS
ARGS=$(cat ./args)
APPS_NUMBER=$(cat ./args | wc -l)

######################################
# COMPILE THE MAIN PAGE OF THE WEBSITE
######################################
function _compile_the_homepage() {
	wget -q https://raw.githubusercontent.com/Portable-Linux-Apps/Portable-Linux-Apps.github.io/main/index.md -O index.old
	sed -n '1,10p' ./index.old > ./index.md
	echo "#### *This site lists **$APPS_NUMBER** Appimage packages and standalone applications.*" >> ./index.md
	sed -n '12,500p' ./index.old >> ./index.md
}

_compile_the_homepage

##########################################################
# UPDATE THE JSON FILE FOR FURTER ELECTRON-BASED FRONTENDS
##########################################################
function _update_json() {
	echo "[" > apps.json
	for arg in $ARGS; do
		description=$(cat "$arch"-apps | grep "◆ $arg :" | sed 's/"//g' | sed 's/^.*: //')
		echo "  {" >> apps.json
		echo "    \"packageName\": \"$arg\"," >> apps.json
		echo "    \"description\": \"$description..\"," >> apps.json
		echo "    \"icon\": \"https://portable-linux-apps.github.io/icons/$arg.png\"" >> apps.json
		echo "  }," >> apps.json
		sleep 0.005
	done
	sed -i '$s/,$//' apps.json
	echo "]" >> apps.json
}

#_update_json

################################################
# COMMON FUNCTIONS NEEDED TO COMPILE OTHER PAGES
################################################

function _home_button {
	echo ""
	echo "| [Home](https://portable-linux-apps.github.io/) |"
	echo "| --- |"
	echo ""
}

function _table_head() {
	echo "-----------------"
	echo ""
	echo "| ICON | PACKAGE NAME | DESCRIPTION | INSTALLER |"
	echo "| --- | --- | --- | --- |"
}

function _categories_buttons() {
	echo ""
	echo "### *Categories*"
	echo ""
	echo "| *[AppImages](https://portable-linux-apps.github.io/appimages.html)* \
	| *[android](https://portable-linux-apps.github.io/android.html)* \
	| *[audio](https://portable-linux-apps.github.io/audio.html)* \
	| *[audio](https://portable-linux-apps.github.io/communication.html)* \
	| *[game](https://portable-linux-apps.github.io/education.html)* \
	| *[game](https://portable-linux-apps.github.io/game.html)* \
	| *[graphic](https://portable-linux-apps.github.io/graphic.html)* \
	| *[internet](https://portable-linux-apps.github.io/internet.html)* \
	| *[office](https://portable-linux-apps.github.io/office.html)* \
	| *[video](https://portable-linux-apps.github.io/video.html)* \
	| *[video](https://portable-linux-apps.github.io/web-browser.html)* \
	|"
	echo  "| - | - | - | - | - | - | - | - | - | - | - |"
	echo ""
}

function _categories_buttons_on_footer() {
	echo ""
	echo "| [Back to Home](https://portable-linux-apps.github.io/) | [Back to Applications](https://portable-linux-apps.github.io/apps.html)"
	echo "| --- | --- |"
	echo ""
}

function _back_to_apps_button() {
	echo ""
	echo "| [Back to Applications](https://portable-linux-apps.github.io/apps.html) |"
	echo "| --- |"
	echo ""
}

function _footer_up() {
	echo ""
	echo ""
	echo "---"
	echo ""
	echo "You can improve these pages via a [pull request](https://github.com/Portable-Linux-Apps/Portable-Linux-Apps.github.io/pulls) \
	to this site's [GitHub repository](https://github.com/Portable-Linux-Apps/Portable-Linux-Apps.github.io),  \
	or report any problems related to the installation scripts in the '[issue](https://github.com/ivan-hc/AM/issues)' \
	section of the main database, at [https://github.com/ivan-hc/AM](https://github.com/ivan-hc/AM)."
	echo ""
	echo "***PORTABLE-LINUX-APPS.github.io is my gift to the Linux community and was made with love for GNU/Linux and the Open Source philosophy.***"
	echo ""
	echo "---"
}

function _footer_down() {
	echo "--------"
	echo ""
	echo "# Contacts"
	echo "- **Ivan-HC** *on* [**GitHub**](https://github.com/ivan-hc)"
	echo "- **AM-Ivan** *on* [**Reddit**](https://www.reddit.com/u/am-ivan)"
	echo ""
	echo "###### *You can support me and my work on [**ko-fi.com**](https://ko-fi.com/IvanAlexHC) and \
	[**PayPal.me**](https://paypal.me/IvanAlexHC). Thank you!*"
	echo ""
	echo "--------"
	echo ""
	echo "*© 2020-present Ivan Alessandro Sala aka '"'Ivan-HC'"'* - I'm here just for fun!"
	echo ""
	echo ""
}

function _footer_apps() {
	_footer_up
	_home_button
	_footer_down
}

function _footer_categories() {
	_footer_up
	_categories_buttons_on_footer
	_footer_down
}

###############################
# COMPILE THE APPLICATIONS LIST
###############################

function _applications_list_header {
	echo "# APPLICATIONS" > apps.md
	_home_button >> apps.md
	echo "#### Here are listed all the apps managed by [AM](https://github.com/ivan-hc/AM) \
	and [AppMan](https://github.com/ivan-hc/AppMan) for the x86_64 architecture." >> apps.md
	echo "" >> apps.md
	echo "*Use your browser's built-in search tool to easily navigate to this page.*" >> apps.md
	echo "" >> apps.md
	echo "#### *This database contains* **$APPS_NUMBER** *Appimage packages and standalone applications*." >> apps.md
	_categories_buttons >> apps.md
	_table_head >> apps.md
}

function _applications_list_body() {
	for arg in $ARGS; do
		description=$(cat "$arch"-apps | grep "◆ $arg :" | sed 's/^.*: //' | sed 's/ *$//')
		echo "| <img src=\"icons/$arg.png\" width=\"48\" height=\"48\"> | [***$arg***](apps/$arg.md) | *$description*..[ *read more* ](apps/$arg.md)*!* | [*blob*](https://github.com/ivan-hc/AM/blob/main/programs/$arch/$arg) **/** [*raw*](https://raw.githubusercontent.com/ivan-hc/AM/main/programs/$arch/$arg) |" >> apps.md
		sleep 0.005
	done
}

_applications_list_header
_applications_list_body
_footer_apps >> apps.md

########################
# COMPILE APPIMAGES PAGE
########################
function _appimages_listing() {
	curl -s https://codeload.github.com/ivan-hc/AM/tar.gz/main | tar -xz --strip=2 AM-main/programs/"$arch"
	ARGS=$(awk -v FS="(◆ | : )" '{print $2}' <"$arch-apps")
	for arg in $ARGS; do
		if grep -qe "appimage\|mage\$" "./$arch/$arg" 1> /dev/null; then
			if ! grep "◆ $arg :" "$arch-apps" | grep -ie "\"kdegames\"\|\"kdeutils\"" 1> /dev/null; then
				grep "◆ $arg :" "$arch-apps" >> "$arch-appimages"
			fi
		fi
	done
	echo -e "$(cat ./"$arch"-appimages | awk -v FS="(◆ | : )" '{print $2}')" > args
	ARGS=$(cat ./args)
	APPIMAGES_NUMBER=$(cat ./args | wc -l)
}

function _appimages_list_header {
	echo "# APPIMAGES" > appimages.md
	_home_button >> appimages.md
	echo "#### Here are listed the **$APPIMAGES_NUMBER** unique Appimages managed by [AM](https://github.com/ivan-hc/AM) \
	and [AppMan](https://github.com/ivan-hc/AppMan) for the x86_64 architecture." >> appimages.md
	echo "" >> appimages.md
	echo "*Use your browser's built-in search tool to easily navigate to this page.*" >> appimages.md
	echo "" >> appimages.md
	_back_to_apps_button >> appimages.md
	#_categories_buttons >> appimages.md
	_table_head >> appimages.md
}

function _appimages_list_body() {
	for arg in $ARGS; do
		description=$(cat "$arch"-appimages | grep "◆ $arg :" | sed 's/^.*: //' | sed 's/ *$//')
		echo "| <img src=\"icons/$arg.png\" width=\"48\" height=\"48\"> | [***$arg***](apps/$arg.md) | *$description*..[ *read more* ](apps/$arg.md)*!* | [*blob*](https://github.com/ivan-hc/AM/blob/main/programs/$arch/$arg) **/** [*raw*](https://raw.githubusercontent.com/ivan-hc/AM/main/programs/$arch/$arg) |" >> appimages.md
		sleep 0.005
	done
}

_appimages_listing
_appimages_list_header
_appimages_list_body
_footer_categories >> appimages.md

##################
# OTHER CATEGORIES
##################

function _category_list_header {
	echo "# $(echo "$category" | tr a-z A-Z)" > "$category".md
	_home_button >> "$category".md
	echo "#### Here are listed **$APPS_NUMBER** applications for this category and managed by [AM](https://github.com/ivan-hc/AM) \
	and [AppMan](https://github.com/ivan-hc/AppMan) for the x86_64 architecture." >> "$category".md
	echo "" >> "$category".md
	echo "*Use your browser's built-in search tool to easily navigate to this page.*" >> "$category".md
	echo "" >> "$category".md
	_back_to_apps_button >> "$category".md
	_categories_buttons >> "$category".md
	_table_head >> "$category".md
}

function _category_list_body() {
	for arg in $ARGS; do
		description=$(cat "$arch"-apps | grep "◆ $arg :" | sed 's/^.*: //' | sed 's/ *$//')
		echo "| <img src=\"icons/$arg.png\" width=\"48\" height=\"48\"> | [***$arg***](apps/$arg.md) | *$description*..[ *read more* ](apps/$arg.md)*!* | [*blob*](https://github.com/ivan-hc/AM/blob/main/programs/$arch/$arg) **/** [*raw*](https://raw.githubusercontent.com/ivan-hc/AM/main/programs/$arch/$arg) |" >> $category.md
		sleep 0.005
	done
}

CATEGORIES="android audio communication education game graphic internet office video web-browser"
for category in $CATEGORIES; do
	if [ "$category" = android ]; then
		grep -i "$category\|adb\|fastboot\|phone\|platform-tools" ./"$arch"-apps >> "$arch-$category"
	elif [ "$category" = audio ]; then
		grep -i "$category\|music\|midi\|mp3\|sound" ./"$arch"-apps >> "$arch-$category"
	elif [ "$category" = communication ]; then
		grep -i "$category\|voip\|facebook\|messenger\|whatsapp\|mastodon\|skype\|chat\|social network\|zoom\|conferenc" ./"$arch"-apps >> "$arch-$category"
	elif [ "$category" = education ]; then
		grep -i "$category\|edu\|learn\|school\|study\|didact\|teach\|translat\|culture\|child\|book" ./"$arch"-apps >> "$arch-$category"
	elif [ "$category" = game ]; then
		grep -i "$category\|arcade\|steam\|wine\|strateg\|solitaire\|poker\|chess\|puzzle\|pinball\|adventure" ./"$arch"-apps >> "$arch-$category"
	elif [ "$category" = graphic ]; then
		grep -i "$category\|picture\|screensh\|gimp\|photo\|svg\|png\|autocad\|blender\|modeling\|paint" ./"$arch"-apps >> "$arch-$category"
	elif [ "$category" = internet ]; then
		grep -i "$category\|web browser\|browser web\|firefox\|chrome\|youtube\|torrent\|p2p\|chat\|whatsapp\|mastodon\|telegram\|skype" ./"$arch"-apps >> "$arch-$category"
	elif [ "$category" = office ]; then
		grep -i "$category\|document\|book\|pdf\|docx\|reader" ./"$arch"-apps >> "$arch-$category"
	elif [ "$category" = video ]; then
		grep -i "$category\|stream\|media player\|film\|movie\|netflix\|youtube" ./"$arch"-apps >> "$arch-$category"
	elif [ "$category" = web-browser ]; then
		grep -i "$category\|web browser\|browser web\|browser.*web\|google chrome\|chromium\|firefox\|vivaldi\|thorium\|mercury\|librewolf" ./"$arch"-apps >> "$arch-$category"
	fi
	echo -e "$(cat ./"$arch-$category" | awk -v FS="(◆ | : )" '{print $2}')" > args
	ARGS=$(cat ./args)
	APPS_NUMBER=$(cat ./args | wc -l)
	_category_list_header
	_category_list_body
	_footer_categories >> "$category".md
	rm -f ./"$arch-$category"
done

######################
# END OF ALL PROCESSES
######################
rm ./args ./index.old ./$arch-apps
