#!/bin/sh

# AM INSTALL SCRIPT VERSION 3. 
set -u
APP=SAMPLE
SITE="REPLACETHIS"

# CREATE DIRECTORIES AND ADD REMOVER
[ -n "$APP" ] && mkdir -p "/opt/$APP/tmp" "/opt/$APP/icons" && cd "/opt/$APP/tmp" || exit 1
echo "#!/bin/sh\nset -e\nrm -f /usr/local/bin/$APP\nrm -R -f /opt/$APP" > "/opt/$APP/remove"
#echo "rm -f /usr/share/applications/AM-$APP.desktop" >> "/opt/$APP/remove"
chmod a+x "/opt/$APP/remove"

# DOWNLOAD AND PREPARE THE APP, $version is also used for updates
version=$(FUNCTION)
wget "$version" || exit 1
[ -e ./*tar* ] && tar fx ./*tar* && rm -f ./*tar*
[ -e ./*zip ] && unzip ./*zip 1>/dev/null && rm -f ./*zip
cd ..

mv ./tmp/* ./
rm -R -f ./tmp || exit 1
echo "$version" > ./version
chmod a+x "/opt/$APP/$APP" || exit 1

# LINK TO PATH
ln -s "/opt/$APP/$APP" "/usr/local/bin/$APP"

# SCRIPT TO UPDATE THE PROGRAM
cat >> "/opt/$APP/AM-updater" << 'EOF'
#!/bin/sh
set -u
APP=SAMPLE
SITE="REPLACETHIS"
version0=$(cat "/opt/$APP/version")
version=$(FUNCTION)
[ -n "$version" ] || { echo "Error getting link"; exit 1; }
if [ "$version" != "$version0" ]; then
	mkdir "/opt/$APP/tmp" && cd "/opt/$APP/tmp" || exit 1
	notify-send "A new version of $APP is available, please wait"
	wget "$version" || exit 1
	[ -e ./*tar* ] && tar fx ./*tar* && rm -f ./*tar*
	[ -e ./*zip ] && unzip ./*zip 1>/dev/null && rm -f ./*zip
	cd ..
	mv --backup=t ./tmp/* ./
	chmod a+x "/opt/$APP/$APP" || exit 1
	echo "$version" > ./version
	rm -R -f ./tmp ./*~
	notify-send "$APP is updated!"
	exit 0
fi
echo "Update not needed!"
EOF
chmod a+x "/opt/$APP/AM-updater"

# LAUNCHER & ICON. Remove this if the app doesn't have them
cd "/opt/$APP" || exit 1
DESKTOP=$(FUNCTION)
ICON=$(FUNCTION)
wget -q "$DESKTOP" -O ./"$APP".desktop && wget -q "$ICON" -O ./"$APP".svg
sed -i "s#Exec=[^ ]*#Exec=$APP#g; s#Icon=.*#Icon=/opt/$APP/icons/$APP#g" ./"$APP".desktop
mv ./"$APP".desktop /usr/share/applications/AM-"$APP".desktop && mv ./"$APP".svg ./icons/"$APP" 2>/dev/null
