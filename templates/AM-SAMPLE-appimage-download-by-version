#!/bin/sh

APP=SAMPLE
URLLATEST=GITHUB
REPOSITORY=GITHUB
FILE=APPIMAGE

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /usr/share/applications/$APP.desktop /opt/$APP /usr/local/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE APPIMAGE
mkdir tmp
cd ./tmp

v=$(wget -q $URLLATEST -O - | grep -E tag_name | awk -F '[""]' '{print $4}')
wget $REPOSITORY/releases/download/$v/$FILE

echo $v >> /opt/$APP/version

cd ..
mv ./tmp/*mage ./$APP
chmod a+x /opt/$APP/$APP
rmdir ./tmp

# LINK
ln -s /opt/$APP/$APP /usr/local/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM
function1='$(wget -q '$URLLATEST' -O -'
part0='{print $4}'
part1='[""]'
function2="grep -E tag_name | awk -F '$part1' '$part0')"
function3='wget '$REPOSITORY'/releases/download/$v/'$FILE''
echo '#!/bin/sh
APP='$APP'
version0=$(cat /opt/$APP/version)
url='$URLLATEST'
if curl -L -s $url | grep -ioF "$version0"; then
  echo "Update not needed!"
else
  notify-send "A new version of '$APP' is available, please wait"
  mkdir /opt/$APP/tmp
  cd /opt/$APP/tmp
  v='$function1' | '$function2'
  '$function3'
  cd ..
  if test -f ./tmp/*mage; then rm ./version
  fi
  echo $v >> ./version
  mv --backup=t ./tmp/*mage ./$APP
  chmod a+x /opt/$APP/$APP
  rm -R -f ./tmp ./*~
fi' >> /opt/$APP/AM-updater
chmod a+x /opt/$APP/AM-updater

# LAUNCHER
rm /usr/share/applications/$APP.desktop
echo "LAUNCHER" >> /usr/share/applications/$APP.desktop

# ICON
WGET

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP

# MESSAGE
echo '

	MESSAGE

'
