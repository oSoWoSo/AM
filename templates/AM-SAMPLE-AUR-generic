#!/bin/sh

APP=SAMPLE

CATEGORIES="YOURCATEGORY"
ICONURL="YOURICONURL"

URL=https://aur.archlinux.org/packages/$APP
COMMENT=$(wget -q $URL -O - | grep -A1 Description | tail -1 | cut -c 30- | rev | cut -c 6- | rev)
UPSTREAMURL=$(wget -q $URL -O - | grep -A3 Upstream | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" | head -1)
APPNAME="NANETHATAPP"

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /usr/share/applications/AM-$APP.desktop /opt/$APP /usr/local/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE ARCHIVE
mkdir tmp
cd ./tmp

version=$(wget -q $URL -O - | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" | grep .NAMETHATEXTENSION | head -1)
wget $version
echo "$version" >> /opt/$APP/version
cd ..
if ls ./tmp/ | grep mage; then
	mv ./tmp/*mage ./$APP
	chmod a+x /opt/$APP/$APP
	rmdir ./tmp
elif ls ./tmp/ | grep .deb; then
	ar x ./*.deb
	tar fx ./data.tar.xz
	cd ..
	mv ./tmp/PATHTOAPP/* ./
	rm -R -f ./tmp
elif ls ./tmp/ | grep .tar.bz2; then
	tar fx ./*.tar.bz2
	cd ..
	mv ./tmp/PATHTOAPP/* ./
	rm -R -f ./tmp
elif ls ./tmp/ | grep .tar.gz; then
	tar fx ./*.tar.gz
	cd ..
	mv ./tmp/PATHTOAPP/* ./
	rm -R -f ./tmp
elif ls ./tmp/ | grep .tar.xz; then
	tar fx ./*.tar.xz
	cd ..
	mv ./tmp/PATHTOAPP/* ./
	rm -R -f ./tmp
elif ls ./tmp/ | grep .zip; then
	dir=$(ls . | rev | cut -c 5- | rev)
	unzip ./*.zip
	cd ..
	mv ./tmp/$dir/* ./
	rm -R -f ./tmp
fi

#-------------------------------------

# LINK
ln -s /opt/$APP/$APP /usr/local/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM
cat >> /opt/$APP/AM-updater << 'EOF'
#!/usr/bin/env bash
APP=SAMPLE
URL=https://aur.archlinux.org/packages/$APP
if curl -L -s $URL | grep -ioF "$version0"; then
  echo "Update not needed!"
else
  notify-send "A new version of $APP is available, please wait"
  mkdir /opt/$APP/tmp
  cd /opt/$APP/tmp
  version=$(wget -q $URL -O - | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" | grep .NAMETHATEXTENSION | head -1)
  wget $version
  if ls . | grep mage; then
	cd ..
  	if test -f ./tmp/*mage; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/*mage ./$APP
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  elif ls . | grep .deb; then
	ar x ./*.deb
	tar fx ./data.tar.xz
	cd ..
  	if test -f ./tmp/*.deb; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/PATHTOAPP/* ./
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  elif ls . | grep .tar.bz2; then
	tar fx ./*.tar.bz2
	cd ..
  	if test -f ./tmp/*.tar.bz2; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/PATHTOAPP/* ./
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  elif ls . | grep .tar.gz; then
	tar fx ./*.tar.gz
	cd ..
  	if test -f ./tmp/*.tar.gz; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/PATHTOAPP/* ./
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  elif ls . | grep .tar.xz; then
	tar fx ./*.tar.xz
	cd ..
  	if test -f ./tmp/*.tar.xz; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/PATHTOAPP/* ./
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  elif ls . | grep .zip; then
  	dir=$(ls . | rev | cut -c 5- | rev)
	unzip ./*.zip
	cd ..
  	if test -f ./tmp/*.zip; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/$dir/* ./
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  fi
fi
EOF
sed -i s/FILENAMEEXTENTION/$FILENAMEEXTENTION/g /opt/$APP/AM-updater
chmod a+x /opt/$APP/AM-updater

# LAUNCHER
rm /usr/share/applications/AM-$APP.desktop
echo "[Desktop Entry]
Name=$APPNAME
Exec=$APP
Icon=/opt/$APP/icons/$APP
Type=Application
Terminal=false
Categories=$CATEGORIES;
Comment=$COMMENT" >> /usr/share/applications/AM-$APP.desktop

# ICON
mkdir ./icons
wget $ICONURL -O /opt/$APP/icons/$APP

# CHANGE THE PERMISSIONS
currentuser=$(who | awk '{print $1}')
chown -R $currentuser /opt/$APP

# MESSAGE
echo "

 $APPNAME is provided by $UPSTREAMURL

"
