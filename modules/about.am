#!/usr/bin/env bash
set -e

# Define functions
function usage() {
	echo " USAGE: $AMCLI $1 [ARGUMENT]";
}

function download_markdown() {
	local markdown_url="https://raw.githubusercontent.com/Portable-Linux-Apps/Portable-Linux-Apps.github.io/main/apps/${1}.md"
	local cache_dir="$AMPATH/.cache/about"
	local app_status=" STATUS: NOT INSTALLED"
	local package_name=${1^^}

	if curl -o /dev/null -sIf "$markdown_url"; then 
		mkdir -p "$cache_dir" && wget -q "$markdown_url" -P "$cache_dir"
		sed -i '1,${ /^\s*#/ d; /^\s*!/ d; /\[Applications]/d; /\ --- /d; }' "$cache_dir/$1.md"
		sed -i '$!N;s/^\s*\n\s*$//;P;D' "$cache_dir/$1.md"

		printf " PACKAGE: %s\n" "$package_name"

		if [ -f "$APPSPATH/$1/remove" ]; then
			local disk_usage=$(du -sm "$APPSPATH/$1" | cut -f1)
			app_status=" STATUS: INSTALLED, ABOUT $disk_usage MB OF DISK SPACE IN USE"
		fi

		printf "%s\n" "$app_status"
		cat -s "$cache_dir/$1.md" && printf "%s\n" "-----------------------------------------------------------------------"
		rm -R -f "$cache_dir"
	else
		printf " \"%s\" IS NOT A VALID ARGUMENT\n" "$package_name"
	fi
}

function download_lib() {
	local lib_name_upper=${1^^}
	printf "%s\n" " LIBRARY: $lib_name_upper"

	if [[ -f "$APPSPATH/$1/remove" ]]; then 
		local lib_path=$(grep "usr/local/lib" "$APPSPATH/$1/remove" | head -1)
		local disk_usage=$(du -sm "$lib_path" | cut -f1)

		if [[ "$disk_usage" -eq 0 ]]; then
			printf "%s\n" " STATUS: INSTALLED, LESS THAN 1 MB OF DISK SPACE IN USE"
		else
			printf "%s\n" " STATUS: INSTALLED, ABOUT $disk_usage MB OF DISK SPACE IN USE"
		fi
	else 
		printf "%s\n" " STATUS: NOT INSTALLED"
	fi

	echo ""
	grep "◆ $1 : " "$AMPATH/libs-list" | sed 's#.*:##' | sed 's/(/\n (/g'
	echo "" && echo " SITE/SOURCES:" && echo ""

	local site_source=$(wget -qO- "$AMREPO/libraries/any/$1" | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" | head -1)
	echo " $site_source"
	echo ""
	printf "%s\n" "-----------------------------------------------------------------------"
}

# Check for arguments
case $2 in
'') usage;;
esac

# Main logic
if [ ! -f "$AMPATH/libs-list" ]; then
	wget -q $AMREPO/libraries/libs-list -P $AMPATH
fi

# Skip the first argument which is not part of ARGS
for arg in "${@:2}"; do
	if curl -o /dev/null -sIf "https://raw.githubusercontent.com/Portable-Linux-Apps/Portable-Linux-Apps.github.io/main/apps/${arg}.md" 1>/dev/null; then
		download_markdown "$arg"
	elif grep -q "◆ $arg : " "$AMPATH/libs-list"; then
		download_lib "$arg"
	else
		printf "%s\n" " \"$arg\" is not a valid argument" | tr 'a-z' 'A-Z'
	fi
done
