#!/usr/bin/env bash

while [ -n "$1" ]; do
	rm -f $AMPATH/.cache/remove-args
	echo "$@" | tr ' ' '\n' >> $AMPATH/.cache/remove-args && echo STOP >> $AMPATH/.cache/remove-args
	ARGS=$(tail -n +2 $AMPATH/.cache/remove-args)

	case $2 in
	'') echo " USAGE: $AMCLI $1 [ARGUMENT]"; exit;;
	esac

	for arg in $ARGS; do

		function _remove(){
			if ls $APPSPATH/$arg > /dev/null 2>&1; then
				case $arg in
				*) 
					$SUDOCOMMAND echo "" > /dev/null; read -p ' â—† DO YOU WISH TO REMOVE "'"$(echo $arg | tr a-z A-Z)"'" (Y,n)?' yn
					case $yn in
					[Nn]* ) 
						echo ' - "'"$(echo $arg | tr a-z A-Z)"'" HAS NOT BEEN REMOVED!'; echo "";;
					[Yy]*|* ) 
						$SUDOCOMMAND $APPSPATH/$arg/remove && sleep 0.5 && echo ' â—† "'"$(echo $arg | tr a-z A-Z)"'" HAS BEEN SUCCESSFULLY REMOVED!';;
					esac
				esac
			else
				echo " - $arg" >> $AMPATH/.cache/unavailable-args
			fi
		}

		if [ $arg == STOP ]; then
			if test -f $AMPATH/.cache/unavailable-args; then
				echo -e "-----------------------------------------------------------------------\n"
				if [ $AMCLI == am ] 2>/dev/null; then
					echo -e " ðŸ’€ ERROR, the following programs you want to remove are NOT in $APPSPATH :\n\n$(cat $AMPATH/.cache/unavailable-args | sort)"
				else
					echo -e " ðŸ’€ ERROR, the following programs you want to remove are NOT in\n    $APPSPATH :\n\n$(cat $AMPATH/.cache/unavailable-args | sort)"
				fi
				echo -e '\n INVALID "APPNAME"!'
				echo -e "\n-----------------------------------------------------------------------\n"
				echo ' â—† INSTALLED PROGRAMS/VALID ARGUMENTS (SEE THE "APPNAME" COLUMN):'
				$AMCLIPATH -f | grep -v "STANDALONE PROGRAMS MANAGED"; rm $AMPATH/.cache/unavailable-args
				echo -e "-----------------------------------------------------------------------"
				exit
			else
				exit
			fi
		else
			_remove
		fi
	done
done

shift
