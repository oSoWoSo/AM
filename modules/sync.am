#!/usr/bin/env bash

function _completion_lists(){
	# Remove existing lists and download new ones
	rm -Rf $AMPATH/{$arch-apps,list,libs-list} &&
	wget -q $APPSLISTDB -P $AMPATH &&
	wget -q $LIBSLISTDB -P $AMPATH
	
	# Extract and append program and library names to the list
	for file in $arch-apps libs-list; do
		if test -f "$AMPATH/$file"; then
			awk -v FS="(◆ | : )" '{print $2}' <$AMPATH/$file >> $AMPATH/list
		fi
	done
	
	# Append options to the list
	cat "$CACHEDIR"/am/options >> $AMPATH/list
}

echo "-----------------------------------------------------------------------------"
echo -e " Checking for changes of the installation scripts in the online database..."
rm -R -f "$CACHEDIR"/am/sync-args && echo "" >> "$CACHEDIR"/am/sync-args
cd $APPSPATH && find -name 'AM-updater' -printf "%h\n" 2>/dev/null | sort -u | cut -c 3- > "$CACHEDIR"/am/sync-args
ARGS=$(cat "$CACHEDIR"/am/sync-args)

for arg in $ARGS; do

	function _sync_installation_scripts(){
		mkdir -p $APPSPATH/$arg/.am-installer
		if test -f $APPSPATH/$arg/.am-installer/$arg; then
			CURRENT=$(cat $APPSPATH/$arg/.am-installer/$arg)
			SOURCE=$(wget -q $APPSDB/$arg -O -)
			if [ "$CURRENT" == "$SOURCE" ]; then
				echo -ne "\r" 2> /dev/null
			else
				echo -e " ◆ Changed https://github.com/ivan-hc/AM/blob/main/programs/$arch/$arg"
			fi
		else
			if curl --output /dev/null --silent --head --fail $APPSDB/$arg  1>/dev/null; then
				echo -e " ◆ No installation script for $arg, downloading one..."
				mkdir -p $APPSPATH/$arg/.am-installer
				wget -q $APPSDB/$arg -O $APPSPATH/$arg/.am-installer/$arg
			fi
		fi
	}

	_sync_installation_scripts

done

echo "-----------------------------------------------------------------------------"
echo -e " Check for updates in modules..."
function _sync_modules(){
	MODULES=$(wget -q $HeaderAuthWithGITPAT https://api.github.com/repos/ivan-hc/AM/contents/modules?ref="$AMBRANCH" -O - | grep download_url | cut -d '"' -f 4)
	for v in $MODULES; do
		cd $AMPATH/modules || return
		MODULENAME=$(echo "$v" | sed 's:.*/::')
		if ! test -f ./$MODULENAME; then
			echo " ◆ Downloading $MODULENAME (not previously installed)..."
			wget -q "$v" -O "$CACHEDIR"/am/"$MODULENAME"
			chmod a+x "$CACHEDIR"/am/"$MODULENAME"
			chmod 775 "$CACHEDIR"/am/"$MODULENAME"
			chown -R :$SUDOGROUP "$CACHEDIR"/am/"$MODULENAME"
			mv "$CACHEDIR"/am/"$MODULENAME" "$AMPATH"/modules/"$MODULENAME" 2>/dev/null
		fi
		CURRENT=$(cat ./$MODULENAME)
		SOURCE=$(wget -q "$v" -O -)
		if [ "$CURRENT" == "$SOURCE" ]; then
			echo -ne "\r" 2> /dev/null
		else
			echo " ◆ Updating $MODULENAME..."
			wget -q "$v" -O "$CACHEDIR"/am/"$MODULENAME"
			chmod a+x "$CACHEDIR"/am/"$MODULENAME"
			chmod 775 "$CACHEDIR"/am/"$MODULENAME"
			chown -R :$SUDOGROUP "$CACHEDIR"/am/"$MODULENAME"
			mv "$CACHEDIR"/am/"$MODULENAME" "$AMPATH"/modules/"$MODULENAME" 2>/dev/null
		fi
	done
}

if [[ "$AMREPO" = *://* ]]; then
	_sync_modules
fi

function _sync_amcli(){
	echo "-----------------------------------------------------------------------------"
  	_completion_lists
	CURRENT_AM_VERSION=$($AMCLIPATH -v)
	echo -ne '\n ◆ SYNCHRONIZING "'"$(echo $AMCLI | tr a-z A-Z)"'" VERSION '"$CURRENT_AM_VERSION"'...\r'; sleep 1
  	rm -R -f "$CACHEDIR"/am/* 1>/dev/null; cd "$CACHEDIR"/am || return
  	if [ $AMCLI == am ] 2>/dev/null; then
  		wget -q $AMREPO/APP-MANAGER -O "$CACHEDIR"/am/APP-MANAGER
  		chmod a+x "$CACHEDIR"/am/APP-MANAGER
		chmod 775 "$CACHEDIR"/am/APP-MANAGER
		chown -R :$SUDOGROUP "$CACHEDIR"/am/APP-MANAGER
		mv "$CACHEDIR"/am/APP-MANAGER /opt/am/APP-MANAGER 2>/dev/null
  	else
  		wget -q $AMREPO/APP-MANAGER -O appman && chmod a+x ./$AMCLI
  		cd ..
  		mv "$CACHEDIR"/am/$AMCLI $AMCLIPATH
  	fi
  	if [ ! "$CURRENT_AM_VERSION" == "$($AMCLIPATH -v)" ] ; then
 		echo -ne ' A new release of "'"$(echo $AMCLI | tr a-z A-Z)"'" is available, please wait...\r'
 		echo -e ' ◆ "'"$(echo $AMCLI | tr a-z A-Z)"'" IS NOW UPDATED TO THE BRAND NEW '"$($AMCLIPATH -v)"' VERSION!           \n\n  Replacement of version '"$CURRENT_AM_VERSION"' currently in use, COMPLETED!'
 		echo -e "\n See https://github.com/ivan-hc/AM/commits/main\n"
 	else
 		echo -e ' ◆ "'"$(echo $AMCLI | tr a-z A-Z)"'" IS ALREADY UPDATED, CURRENT VERSION '"$CURRENT_AM_VERSION"''
 		echo -e "\n See https://github.com/ivan-hc/AM/commits/main\n"
 	fi
}

if [[ "$AMREPO" = *://* ]]; then
	_sync_amcli
fi
