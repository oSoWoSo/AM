#!/usr/bin/env bash

case $2 in
'') echo " USAGE: $AMCLI $1 [ARGUMENT]"; exit;;
esac

while [ -n "$1" ]; do
	rm -f $AMPATH/.cache/tolaunch-args;
	echo "$@" | tr ' ' '\n' >> $AMPATH/.cache/tolaunch-args && echo STOP >> $AMPATH/.cache/tolaunch-args;
	ARGS=$(tail -n +2 $AMPATH/.cache/tolaunch-args)

	for arg in $ARGS; do

		function _launcher(){
			if ! strings -d "$arg" 2>/dev/null | grep -F -q 'appimage-help                 Print this help'; then
				echo ' ERROR: "'$arg'" is NOT an AppImage'
			else
				appimage=$(basename -- "$arg")
				mkdir -p $HOME/.local/share/applications/AppImages
				mkdir -p $HOME/.local/share/icons
				chmod a+x "$arg"
				cd "$(dirname "$arg")" || return

				function _launcher_appimage_extract(){
					"$arg" --appimage-extract share/icons/*/*/* 1>/dev/null
					"$arg" --appimage-extract usr/share/icons/*/*/* 1>/dev/null
					"$arg" --appimage-extract share/icons/*/*/*/* 1>/dev/null
					"$arg" --appimage-extract usr/share/icons/*/*/*/* 1>/dev/null
					"$arg" --appimage-extract *.svg 1>/dev/null
					"$arg" --appimage-extract *.png 1>/dev/null
					"$arg" --appimage-extract *.desktop 1>/dev/null
					"$arg" --appimage-extract share/applications/*.desktop 1>/dev/null
					"$arg" --appimage-extract usr/share/applications/*.desktop 1>/dev/null
				}

				function _launcher_appimage_integration(){
					echo "[Desktop Entry]" >> ./"$appimage".desktop
					echo "Version=1.0" >> ./"$appimage".desktop
					echo "Type=Application" >> ./"$appimage".desktop
					echo "Terminal=false" >> ./"$appimage".desktop
					echo "StartupNotify=true" >> ./"$appimage".desktop
					echo "Exec=$arg %U" >> ./"$appimage".desktop
					cat ./squashfs-root/*.desktop | grep Name= | head -1 >> ./"$appimage".desktop
					cat ./squashfs-root/*.desktop | grep -F 'Name[' >> ./"$appimage".desktop
					cat ./squashfs-root/*.desktop | grep Categories= >> ./"$appimage".desktop
					cat ./squashfs-root/*.desktop | grep Comment= | head -1 >> ./"$appimage".desktop
					cat ./squashfs-root/*.desktop | grep -F 'Comment[' >> ./"$appimage".desktop
					cat ./squashfs-root/*.desktop | grep Icon= | head -1 >> ./"$appimage".desktop
					cat ./squashfs-root/*.desktop | grep MimeType= | head -1 >> ./"$appimage".desktop
					cat ./"$appimage".desktop | uniq > ./"$appimage"-1.desktop && mv ./"$appimage"-1.desktop ./"$appimage".desktop
					mv ./"$appimage".desktop $HOME/.local/share/applications/AppImages/"$appimage".desktop 2>/dev/null
					mv ./squashfs-root/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/*.svg $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/icons/hicolor/0x0/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/icons/hicolor/22x22/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/icons/hicolor/24x24/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/icons/hicolor/32x32/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/icons/hicolor/48x48/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/icons/hicolor/64x64/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/icons/hicolor/128x128/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/icons/hicolor/256x256/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/icons/hicolor/512x512/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/icons/hicolor/scalable/apps/*.svg $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/share/pixmaps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/icons/hicolor/0x0/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/icons/hicolor/22x22/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/icons/hicolor/24x24/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/icons/hicolor/32x32/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/icons/hicolor/48x48/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/icons/hicolor/64x64/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/icons/hicolor/128x128/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/icons/hicolor/256x256/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/icons/hicolor/512x512/apps/*.png $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/icons/hicolor/scalable/apps/*.svg $HOME/.local/share/icons/ 2>/dev/null
					mv ./squashfs-root/usr/share/pixmaps/*.png $HOME/.local/share/icons/ 2>/dev/null
					rm -R -f ./squashfs-root
				}

				function _launcher_appimage_bin(){
					mkdir -p "$HOME"/.local/bin
					function _patch_bashrc_and_profile(){
						# Check if the custom PATH is not already in .bashrc, then append it (fix - exclamation mark negates the entire command substitution)
						if ! grep -q 'export PATH=$PATH:$(xdg-user-dir USER)/.local/bin' "$HOME/.bashrc"; then
							echo 'export PATH=$(echo $PATH | tr ":" "\n" | grep -v "/.local/bin" | tr "\n" ":" | sed ''s/.$//'')' >> "$HOME/.bashrc"
							echo -e 'export PATH=$PATH:$(xdg-user-dir USER)/.local/bin\n' >> "$HOME/.bashrc"
						fi
						# Correct the order of .local/bin in .profile if necessary
						if test -f "$HOME/.profile"; then
							if grep -q 'PATH="$HOME/.local/bin:$PATH"' "$HOME/.profile"; then
								sed -i 's#PATH="$HOME/.local/bin:$PATH"#PATH="$PATH:$HOME/.local/bin"#g' "$HOME/.profile"
							fi
						elif test -f "$HOME/.bash_profile"; then
							if grep -q 'PATH="$HOME/.local/bin:$PATH"' "$HOME/.bash_profile"; then
								sed -i 's#PATH="$HOME/.local/bin:$PATH"#PATH="$PATH:$HOME/.local/bin"#g' "$HOME/.bash_profile"
							fi
						fi
					}
					_patch_bashrc_and_profile
					if ! echo "$appimage" | grep -q -i "appimage"; then
						echo -e '#!/bin/sh\n'$arg'' >> "$HOME"/.local/bin/"$appimage".appimage
						chmod a+x "$HOME"/.local/bin/"$appimage".appimage
					else
						echo -e '#!/bin/sh\n'$arg'' >> "$HOME"/.local/bin/"$appimage"
						chmod a+x "$HOME"/.local/bin/"$appimage"
					fi
				}

				_launcher_appimage_extract 2>/dev/null
				_launcher_appimage_integration 2>/dev/null
				_launcher_appimage_bin 2>/dev/null
			fi
		}

		if [ $arg == STOP ]; then
			exit
		else
			_launcher
		fi
	done
done

shift
